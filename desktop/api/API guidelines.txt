When designing an API, please use this format:

	General rules of thumb:
		
		keep method names short.

	For constructors:
		
		Accept one argument, called params.
		When declaring class parameters
		(that are user-definable, of course), use something like this:
			
			/*
			 * 	Property: parameter
			 *  
			 *  Summary:
			 *  	Change a behavior of this widget
			 *  
			 *  Note:
			 *  	This will not work in all browsers (*cough* IE *cough cough*)
			 */
			this.parameter = ((typeof params.parameter == "string") ? params.parameter : "default value");
			
		At the top of your code, put this:
			
			if(typeof params != "object") params = {};
	
	For storage-centric APIs:
	
		use three methods, get(), save(), and remove().
		
		If it is something like a database:
			For filtering, name methods filter(), byId(), and exclude().
			Make sure get(), filter(), byId(), and exclude()
			return a member of the object, named 'objects'
			containing the filtering methods.
		
	For widgets/windows:
		
		To show/hide, use methods named show() and destroy().