--    Psych Desktop
--    Copyright (C) 2006 Psychiccyberfreak
 --
  --  This program is free software; you can redistribute it and/or modify
  --  it under the terms of the GNU General Public License as published by
  --  the Free Software Foundation; either version 2 of the License, or
  --  (at your option) any later version.
  --
  --  This program is distributed in the hope that it will be useful,
  --  but WITHOUT ANY WARRANTY; without even the implied warranty of
  --  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  --  GNU General Public License for more details.

  --  You should have received a copy of the GNU General Public License along
  --  with this program; if not, write to the Free Software Foundation, Inc.,
  --  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  --
-- NOTE: DON'T ACTUALLY RUN THIS! THE INSTALLER (install.php) will install for you!
-- Changed the charset to utf8, it's more standard...
-- Also fixed that nasty "there can be only one auto column and it must be defined as a key" bug.
-- Now the user can specify a prefix! Woo Hoo!!!
-- --------------------------------------------------------

--Do not remove this; it is for the script that automatically updates the
--demo on the website

--START APPS------------------

-- 
-- Table structure for table `#__apps`
--
DROP TABLE IF EXISTS `#__apps`;
CREATE TABLE `#__apps` (
  `ID` int(20) NOT NULL auto_increment,
  `name` mediumtext NOT NULL,
  `author` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `code` longtext NOT NULL,
  `version` text NOT NULL,
  `maturity` mediumtext NOT NULL,
  `category` mediumtext NOT NULL,
  PRIMARY KEY  (`ID`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

-- 
-- Dumping data for table `#__apps`
-- 

REPLACE INTO `#__apps` (`ID`, `name`, `author`, `email`, `code`, `version`, `maturity`, `category`) VALUES 
(1, 'Calculator', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'this.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	this.status = \\"killed\\";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args)\r\n{\r\nwinHTML  = \\''<form style=\\"height: 12%; overflow: hidden;\\" onSubmit=\\"return desktop.app.instances[\\''+this.instance+\\''].evaluate();\\"><input type=\\"text\\" id=\\"results\\''+this.instance+\\''\\" style=\\"text-align: right; width: 100%;\\" /></form>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''(\\\\\\''\\">(</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\'')\\\\\\''\\">)</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%; visibility: hidden;\\"> </button>\\''\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value = \\\\\\''\\\\\\''\\">C</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''7\\\\\\''\\">7</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''8\\\\\\''\\">8</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''9\\\\\\''\\">9</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''/\\\\\\''\\">/</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''4\\\\\\''\\">4</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''5\\\\\\''\\">5</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''6\\\\\\''\\">6</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''*\\\\\\''\\">*</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''1\\\\\\''\\">1</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''2\\\\\\''\\">2</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''3\\\\\\''\\">3</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''-\\\\\\''\\">-</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''0\\\\\\''\\">0</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''.\\\\\\''\\">.</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"desktop.app.instances[\\''+this.instance+\\''].evaluate()\\">=</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''+\\\\\\''\\">+</button>\\'';\r\n//-------------------\r\nthis.window = new api.window();\r\nthis.window.title=\\"Calculator\\";\r\nthis.window.write(winHTML);\r\nthis.window.width=\\"200px\\";\r\nthis.window.height=\\"235px\\";\r\nthis.window.show();\r\nthis.status = \\"active\\";\r\nthis.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\nthis.evaluate = function()\r\n{\r\n     if(document.getElementById(\\"results\\"+this.instance).value != \\"\\")\r\n     {\r\n          try{ eval(\\"document.getElementById(\\''results\\''+this.instance).value = \\"+document.getElementById(\\"results\\"+this.instance).value); }\r\n          catch(e) { document.getElementById(\\''results\\''+this.instance).value = \\"ERROR\\"; }\r\n     }\r\n     return false;\r\n}', '1.0', 'Alpha', 'Accessories'),
(2,'Web Browser','Psychiccyberfreak','bj@psychdesigns.net','this.kill = function() {\n	if(!this.window.destroyed) { this.window.destroy(); }\n	this.status = \\\"killed\\\";\n}\nthis.windowKill = function() {\n	this.kill();\n}\nthis.init = function(args)\n{\n	this.window = new api.window();\n	this.window.write(\\\'<form name=\\\"submitbox\\\" action=\\\"#\\\" onSubmit=\\\"return desktop.app.instances[\\\'+this.instance+\\\'].go()\\\" >\\\');\n	this.window.write(\\\'<form name=\\\"submitbox\\\" action=\\\"#\\\" onSubmit=\\\"return desktop.app.instances[\\\'+this.instance+\\\'].go()\\\" >\\\');\n	this.window.write(\\\'<input type=\\\"text\\\" id=\\\"browserUrlBox\\\'+this.instance+\\\'\\\" value=\\\"http://www.google.com/\\\" style=\\\"width: 94%;\\\" />\\\');\n	this.window.write(\\\'<input type=\\\"button\\\" value=\\\"Go\\\" onClick=\\\"desktop.app.instances[\\\'+this.instance+\\\'].go()\\\" style=\\\"width: 6%;\\\"><br />\\\');\n	this.window.write(\\\'<iframe style=\\\"width: 99%; height: 90%; background-color: #FFFFFF;\\\" src=\\\"http://www.google.com\\\" id=\\\"browserIframe\\\'+this.instance+\\\'\\\" /></form>\\\');\n	this.window.title=\\\"Web Browser\\\";\n	this.window.height=\\\"420px\\\";\n	this.window.width=\\\"500px\\\";\n	this.window.show();\n	this.status = \\\"active\\\";\n	this.window.onDestroy = dojo.hitch(this, this.windowKill);\n	if(typeof args.url == \\\"string\\\")\n	{\n		this.go(args.url);\n	}\n}\n\nthis.go = function(url)\n{\nurlbox = document.getElementById(\\\"browserUrlBox\\\"+this.instance);\nURL = (url || urlbox.value);\nif(URL.charAt(4) == \\\":\\\" && URL.charAt(5) == \\\"/\\\" && URL.charAt(6) == \\\"/\\\")\n{\n}\nelse\n{\n//but wait, what if it\\\'s an FTP site?\nif(URL.charAt(3) == \\\":\\\" && URL.charAt(4) == \\\"/\\\" && URL.charAt(5) == \\\"/\\\")\n{\n}\nelse\n{\n//if it starts with an \\\"ftp.\\\", it\\\'s most likely an FTP site.\nif((URL.charAt(0) == \\\"F\\\" || URL.charAt(0) == \\\"f\\\") && (URL.charAt(1) == \\\"T\\\" || URL.charAt(1) == \\\"t\\\") && (URL.charAt(2) == \\\"P\\\" || URL.charAt(2) == \\\"p\\\") && URL.charAt(3) == \\\".\\\")\n{\nURL = \\\"ftp://\\\"+URL;\n}\nelse\n{\n//ok, it\\\'s probably a plain old HTTP site...\nURL = \\\"http://\\\"+URL;\n}\n}\n}\nIframe = document.getElementById(\\\"browserIframe\\\"+this.instance);\nIframe.src = URL;\nurlbox.value = URL;\nreturn false;\n}','1.0','Alpha','Internet'),
(3, 'Control Panel', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'dojo.require(\\"dojo.parser\\");\ndojo.require(\\"dijit.form.TextBox\\");\ndojo.require(\\"dijit.ColorPalette\\");\ndojo.require(\\"dijit.layout.ContentPane\\");\ndojo.require(\\"dijit.layout.LayoutContainer\\");\ndojo.require(\\"dijit.layout.TabContainer\\");\ndojo.require(\\"dijit.form.Form\\");\ndojo.require(\\"dijit.form.CheckBox\\");\ndojo.require(\\"dijit.Toolbar\\");\nthis.kill = function() {\n	if(!this.window.destroyed) { this.window.destroy(); }\n	this.status = \\"killed\\";\n}\nthis.windowKill = function() {\n	this.kill();\n}\nthis.init = function(args) {\n	this.open();\n}\nthis.processUserName = function(username) {\n	dojo.byId(\\"userName\\"+this.instance).innerHTML = username;\n}\nthis.processUserEmail = function(useremail) {\n	dojo.byId(\\"userEmail\\"+this.instance).innerHTML = useremail;\n}\nthis.processUserID = function(userid) {\n	dojo.byId(\\"userID\\"+this.instance).innerHTML = userid;\n}\nthis.processUserLevel = function(userlevel) {\n	dojo.byId(\\"userLevel\\"+this.instance).innerHTML = userlevel;\n}\nthis.processThemes = function(theme) {\n	output = \\"\\";\n	for(x=0;x<theme.length;x++) {\n	if(typeof(theme[x]) != \\"undefined\\") {\n		output += \\"<li>\\"+theme[x]+\\"</li><br>\\";\n	}\n	}\n	dojo.byId(\\"themeList\\"+this.instance).innerHTML = output;\n}\nthis.open = function(args)\n{\n	this.window = new api.window();\n	this.window.title=\\"Control Panel\\";\n	this.window.width=\\"620px\\";\n	this.window.height=\\"410px\\";\n	this.window.setBodyWidget(\\"LayoutContainer\\", {});\n	var toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\n	toolbar.addChild(new dijit.form.Button({label: \\"About\\", onClick: dojo.hitch(this, this.about), iconClass: \\"icon-16-apps-help-browser\\"}));\n	toolbar.addChild(new dijit.form.Button({label: \\"Save to server\\", onClick: dojo.hitch(this, this.processSave), iconClass: \\"icon-16-actions-document-save\\"}));\n	this.window.addChild(toolbar);\n	var tabs = new dijit.layout.TabContainer({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\n		var wallpaper = new dijit.layout.ContentPane({title: \\"Wallpaper\\"}, document.createElement(\\"div\\"));\n		var winHTML = \\"<fieldset><legend>Color</legend>\\";\n		winHTML += \\"<div id=\\\\\\"colorThing\\"+this.instance+\\"\\\\\\"></div>\\";\n		winHTML += \\"<br /><br /><b>HTML Color:</b><div id=\\\\\\"colorPick\\"+this.instance+\\"\\\\\\"></div>\\";\n		winHTML += \\"</fieldset>\\";\n		winHTML += \\"<fieldset><legend>Background Image</legend>\\";\n		winHTML += \\"Default<div id=\\\\\\"radio1\\"+this.instance+\\"\\\\\\"></div>None<div id=\\\\\\"radio2\\"+this.instance+\\"\\\\\\"></div>\\";\n		winHTML += \\"<br /><b>Image URL: </b><input type=\\''text\\'' name=\\''image\\"+this.instance+\\"\\'' value=\\''\\"+ desktop.config.wallpaper.image +\\"\\'' id=\\''image\\"+this.instance+\\"\\'' />\\";\n		winHTML += \\"</fieldset>\\"\n		wallpaper.setContent(winHTML);\n		tabs.addChild(wallpaper);\n\n		var themes = new dijit.layout.ContentPane({title: \\"Themes\\"}, document.createElement(\\"div\\"));\n		winHTML = \\"Current theme: <span id=\\\\\\"currentTheme\\"+this.instance+\\"\\\\\\">\\"+desktop.config.theme+\\"</span> theme.<br><br><fieldset><legend>Change theme</legend>Theme Name: <input type=\\\\\\"text\\\\\\" name=\\\\\\"theme\\"+this.instance+\\"\\\\\\" id=\\\\\\"theme\\"+this.instance+\\"\\\\\\" value=\\\\\\"\\"+desktop.config.theme+\\"\\\\\\"></fieldset><p><p><fieldset><legend>Installed Themes</legend><span id=\\\\\\"themeList\\"+this.instance+\\"\\\\\\">obtaining...</span></fieldset>\\";\n		themes.setContent(winHTML);\n		tabs.addChild(themes);\n\n		var performance = new dijit.layout.ContentPane({title: \\"Performance\\"}, document.createElement(\\"div\\"));\n		winHTML = \\"Effects: <input checked type=\\''checkbox\\'' value=\\''true\\'' name=\\''bbbbb\\'' id=\\''bbbbb\\"+this.instance+\\"\\''><br><br>Disabling effects can have a major speed boost on a slow machine. <br> If you have a high-end machine, you are recommended to leave effects on.\\"; \n		performance.setContent(winHTML);\n		tabs.addChild(performance);\n\n		var account = new dijit.layout.ContentPane({title: \\"Account Details\\"}, document.createElement(\\"div\\"));\n		winHTML = \\"Account details: <br><b>UserID:</b> <span id=\\\\\\"userID\\"+this.instance+\\"\\\\\\">obtaining...</span><br><b>Username:</b> <span id=\\\\\\"userName\\"+this.instance+\\"\\\\\\">obtaining...</span><br><b>E-mail:</b> <span id=\\\\\\"userEmail\\"+this.instance+\\"\\\\\\">obtaining...</span><br><b>Password:</b> (hidden)<br><b>Userlevel:</b> <span id=\\\\\\"userLevel\\"+this.instance+\\"\\\\\\">obtaining...</span>\\"; \n		account.setContent(winHTML);\n		tabs.addChild(account);\n\n		var password = new dijit.layout.ContentPane({title: \\"Change Details\\"}, document.createElement(\\"div\\"));\n		winHTML = \\"Current Password: <span id=\\\\\\"oldPass\\"+this.instance+\\"\\\\\\"></span><br>(To authenticate any changes on this page you need to insert this) <p> New Password: <span id=\\\\\\"newPass\\"+this.instance+\\"\\\\\\"></span><br>New Password (Confirm):<span id=\\\\\\"newPassConfirm\\"+this.instance+\\"\\\\\\"></span><p>E-mail:<span id=\\\\\\"email\\"+this.instance+\\"\\\\\\"></span><div id=\\\\\\"buttonMaybe\\"+this.instance+\\"\\\\\\"></div>\\";\n		password.setContent(winHTML);\n		tabs.addChild(password); \n\n		var advanced = new dijit.layout.ContentPane({title: \\"Advanced\\"}, document.createElement(\\"div\\"));\n		winHTML = \\"debug: <div id=\\\\\\"debug\\"+this.instance+\\"\\\\\\"></div> <p> crosstalkPing:<span style=\\\\\\"display: inline\\\\\\" id=\\\\\\"crosstalkPing\\"+this.instance+\\"\\\\\\"></span><span id=\\\\\\"buttonMaybe\\"+this.instance+\\"\\\\\\"></span><p><b>debug:</b> an option that enables some advanced output and options.(dev only). <br> <b>crosstalkPing:</b> how often the desktop communicates with the server. (in miliseconds).\\";\n		advanced.setContent(winHTML);\n		tabs.addChild(advanced); \n\n	this.window.addChild(tabs);\n	this.window.show();\n	this.window.startup();\n	this.status = \\"active\\";\n	this.window.onDestroy = dojo.hitch(this, this.windowKill);\n	new dijit.form.TextBox({id: \\"theme\\"+this.instance, name: \\"theme\\"+this.instance}, document.getElementById(\\"theme\\"+this.instance));\n	new dijit.ColorPalette({palette: \\"7x10\\", onChange: dojo.hitch(this, this.colorChange)}, document.getElementById(\\"colorThing\\"+this.instance));\n	new dijit.form.TextBox({id: \\"colorPick\\"+this.instance, name: \\"colorPick\\"+this.instance}, document.getElementById(\\"colorPick\\"+this.instance));\n	new dijit.form.TextBox({id: \\"oldPass\\"+this.instance, name: \\"oldPass\\"+this.instance}, document.getElementById(\\"oldPass\\"+this.instance));\n	new dijit.form.TextBox({id: \\"newPass\\"+this.instance, name: \\"newPass\\"+this.instance}, document.getElementById(\\"newPass\\"+this.instance));\n	new dijit.form.TextBox({id: \\"newPassConfirm\\"+this.instance, name: \\"newPassConfirm\\"+this.instance}, document.getElementById(\\"newPassConfirm\\"+this.instance));\n	new dijit.form.TextBox({id: \\"image\\"+this.instance, name: \\"image\\"+this.instance}, document.getElementById(\\"image\\"+this.instance));\n	new dijit.form.RadioButton({checked: false, name:\\"radiobutton\\",id:\\"radio1\\"+this.instance}, document.getElementById(\\"radio1\\"+this.instance));\n	new dijit.form.RadioButton({checked: false, name:\\"radiobutton\\",id:\\"radio2\\"+this.instance}, document.getElementById(\\"radio2\\"+this.instance));\n	new dijit.form.CheckBox({name:\\"fx\\"+this.instance, id:\\"fx\\"+this.instance}, document.getElementById(\\"bbbbb\\"+this.instance));\n	new dijit.form.CheckBox({name:\\"debug\\"+this.instance, id:\\"debug\\"+this.instance}, document.getElementById(\\"debug\\"+this.instance));\n	new dijit.form.TextBox({id: \\"crosstalkPing\\"+this.instance, name: \\"crosstalkPing\\"+this.instance}, document.getElementById(\\"crosstalkPing\\"+this.instance));\n	new dijit.form.TextBox({id: \\"email\\"+this.instance, name: \\"email\\"+this.instance}, document.getElementById(\\"email\\"+this.instance));\n	dijit.byId(\\"colorPick\\"+this.instance).setValue(desktop.config.wallpaper.color);\n	dijit.byId(\\"theme\\"+this.instance).setValue(desktop.config.theme);\n	dijit.byId(\\"image\\"+this.instance).setValue(desktop.config.wallpaper.image);\n	dijit.byId(\\"fx\\"+this.instance).setChecked(desktop.config.fx);\n	dijit.byId(\\"debug\\"+this.instance).setChecked(desktop.config.debug);\n	dijit.byId(\\"crosstalkPing\\"+this.instance).setValue(desktop.config.crosstalkPing);\n	api.user.getUserName(dojo.hitch(this, this.processUserName));\n	api.user.getUserID(dojo.hitch(this, this.processUserID));\n	api.user.getUserLevel(dojo.hitch(this, this.processUserLevel));\n	api.user.getUserEmail(dojo.hitch(this, this.processUserEmail));\n	desktop.theme.list(dojo.hitch(this, this.processThemes));\n}\nthis.radioButton = function(a) {\n	alert(a);\n}\nthis.colorChange = function(color) {\n	dijit.byId(\\"colorPick\\"+this.instance).setValue(color);\n}\nthis.about = function() {\n	api.ui.alert({title: \\"Control Panel\\", message:\\"Psych Desktop Control Panel<br>Version \\"+this.version});\n}\nthis.processSave = function() {\n	var old = dijit.byId(\\"oldPass\\"+this.instance).getValue();\n	var newa = dijit.byId(\\"newPass\\"+this.instance).getValue();\n	var newConfirm = dijit.byId(\\"newPassConfirm\\"+this.instance).getValue();\n	var email = dijit.byId(\\"email\\"+this.instance).getValue();\n	if(old != \\"\\") {\n		if(newa != newConfirm) { \n			api.ui.alert({title: \\"Error\\", message:\\"New password and new confirm password do not match.\\"});\n			return false; \n		}\n		if(email != \\"\\") { desktop.user.changeUserEmail({old: old, newemail: email, callback: function(a) {\n		if(a == 1) {\n		api.ui.alert({title:\\"E-mail Change Result\\", message: \\"E-mail change unsucessful. Check that password is correct.\\"});\n		}\n		else {\n		api.ui.alert({title:\\"E-mail Change Result\\", message: \\"E-mail changed.\\"});\n		}\n		}});}\n		if(newa != \\"\\") { desktop.user.changeUserPassword({old: old, newpass: newa, callback:function(a) {\n		if(a == 1) {\n		api.ui.alert({title:\\"Password Change Result\\", message: \\"Password change unsuccessful. Check that your old password is correct.\\"});\n		}\n		else {\n		api.ui.alert({title:\\"Password Change Result\\", message: \\"Password change successful.\\"});\n		}\n		}});}\n		dijit.byId(\\"oldPass\\"+this.instance).setValue(\\"\\");\n		dijit.byId(\\"newPass\\"+this.instance).setValue(\\"\\");\n		dijit.byId(\\"newPassConfirm\\"+this.instance).setValue(\\"\\");\n		dijit.byId(\\"email\\"+this.instance).setValue(\\"\\");\n	}\n	var image=dijit.byId(\\"image\\"+this.instance).getValue();\n	var color=dijit.byId(\\"colorPick\\"+this.instance).getValue();\n	var fx=dijit.byId(\\"fx\\"+this.instance).checked;\n	var theme=dijit.byId(\\"theme\\"+this.instance).getValue();\n	var debug=dijit.byId(\\"debug\\"+this.instance).checked;\n	var crosstalkPing=dijit.byId(\\"crosstalkPing\\"+this.instance).getValue();\n	desktop.theme.set(theme);\n	dojo.byId(\\"currentTheme\\"+this.instance).innerHTML = theme;\n	desktop.wallpaper.set(image);\n	desktop.wallpaper.setColor(color);\n	desktop.config.debug = debug;\n	desktop.config.crosstalkPing = parseInt(crosstalkPing);\n	desktop.config.wallpaper.image = image;\n	desktop.config.wallpaper.color = color;\n	desktop.config.fx = fx;\n	desktop.config.save();\n	api.ui.alert({title: \\"Notice\\", message: \\"Changes were applied successfully.\\"});\n	api.user.getUserName(dojo.hitch(this, this.processUserName));\n	api.user.getUserID(dojo.hitch(this, this.processUserID));\n	api.user.getUserLevel(dojo.hitch(this, this.processUserLevel));\n	api.user.getUserEmail(dojo.hitch(this, this.processUserEmail));\n}	', '1.0.5', 'Stable', 'System'),
(4, 'Notepad', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'dojo.require(\\"dijit.Toolbar\\");\r\ndojo.require(\\"dijit.layout.ContentPane\\");\r\ndojo.require(\\"dijit.layout.LayoutContainer\\");\r\nthis.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	if(!this.window2.destroyed) { this.window2.destroy(); }\r\n	this.status = \\"killed\\";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init=function(args)\r\n{\r\nthis.window2 = new api.window();\r\nthis.window2.write(\\"Please wait whilst we get data from the registry...\\");\r\nthis.window2.height=\\"100px\\";\r\nthis.window2.width=\\"100px\\";\r\nthis.window2.title=\\"Please wait...\\";\r\nthis.window2.show();\r\napi.registry.get({appid:this.id, varname:\\"notepad\\", callback:dojo.hitch(this, this.notepad)});\r\n}\r\n\r\nthis.notepad=function(text) {\r\nthis.window2.destroy();\r\nthis.window = new api.window();\r\nthis.window.setBodyWidget(\\"LayoutContainer\\", {});\r\nvar toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\ntoolbar.addChild(new dijit.form.Button({label: \\"Save to server\\", onClick: dojo.hitch(this, this.processSave), iconClass: \\"icon-16-actions-document-save\\"}));\r\ntoolbar.addChild(new dijit.form.Button({label: \\"Exit\\", onClick: dojo.hitch(this, this.exit), iconClass: \\"icon-16-actions-system-log-out\\"}));\r\nthis.window.addChild(toolbar);\r\nvar box = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\nthis.other = new dijit.layout.ContentPane({layoutAlign: \\"bottom\\", style: \\"height: 10%\\"}, document.createElement(\\"div\\"));\r\nhtml = \\"<div padding=10>\\";\r\nhtml += \\"<textarea id=\\''notepad\\"+this.instance+\\"\\'' style=\\''width: 100%; height: 90%;\\''>\\";\r\nhtml += text.value;\r\nhtml += \\"</textarea>\\";\r\n//this.window.write(\\"<input onclick=\\\\\\"note = document.getElementById(\\''notepad\\"+this.instance+\\"\\'').value.replace(/\\\\\\\\n/gi, \\'' \\'' ); api.registry.save(\\"+this.id+\\", \\''notepad\\'', note);\\\\\\" value=\\''Save\\'' type=\\''button\\'' />\\");\r\nbox.setContent(html);\r\nthis.other.setContent(\\"Ready\\");\r\nthis.window.addChild(box);\r\nthis.window.addChild(this.other);\r\nthis.window.title=\\"Notepad\\";\r\nthis.window.width=\\"300px\\";\r\nthis.window.height=\\"305px\\";\r\nthis.window.show();\r\nthis.window.startup();\r\nthis.status = \\"active\\";\r\nthis.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\n\r\nthis.processSave=function()\r\n{\r\n	\r\nnote = dojo.byId(\\''notepad\\''+this.instance).value.replace(/\\\\\\\\n/gi, \\'' \\'' );\r\napi.registry.save({appid: this.id, varname:\\''notepad\\'', value: note});\r\nthis.other.setContent(\\"save sucessful.\\");\r\nthis.window.startup();\r\n\r\n}\r\n\r\nthis.exit=function(){\r\nthis.other.setContent(\\"goodbye!\\");\r\n	this.window.destroy();\r\n}\r\n\r\n', '1.0', 'Beta', 'Accessories'),
(5,'Katana IDE','Psychiccyberfreak','bj@psychdesigns.net','this.blah = 0;\r\nthis.init = function(args)\r\n{\r\n	api.instances.setActive(this.instance);\r\n	dojo.require(\\\"dijit.layout.LayoutContainer\\\");\r\n	dojo.require(\\\"dijit.form.Textarea\\\");\r\n	dojo.require(\\\"dijit.form.Button\\\");\r\n        dojo.require(\\\"dijit.form.TextBox\\\");\r\n	dojo.require(\\\"dijit.Toolbar\\\");\r\n	this.win = new api.window({\r\n		title: \\\"Katana IDE\\\",\r\n	});\r\n	this.win.setBodyWidget(\\\"LayoutContainer\\\", {});\r\n	\r\n	var client = new dijit.layout.ContentPane({style: \\\"overflow-y: auto; overflow-x: hidden;\\\", layoutAlign: \\\"client\\\"}, document.createElement(\\\"div\\\"));\r\n		this.editor = document.createElement(\\\"textarea\\\");\r\n		this.editor.style.width=\\\"100%\\\";	\r\n		this.editor.style.height=\\\"100%\\\";\r\n		this.editor.style.border=\\\"0px none\\\";\r\n		this.editor.style.margin=\\\"0px\\\";\r\n		dojo.connect(this.editor, \\\"onkeypress\\\", this, this.onKey);\r\n		client.setContent(this.editor);\r\n	this.win.addChild(client);\r\n	\r\n	this.toolbar = new dijit.Toolbar({layoutAlign: \\\"top\\\"});\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\\"New\\\", iconClass: \\\"icon-16-actions-document-new\\\", onClick: dojo.hitch(this, this.new)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\\"Open\\\", iconClass: \\\"icon-16-actions-document-open\\\", onClick: dojo.hitch(this, this.load)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\\"Save\\\", iconClass: \\\"icon-16-actions-document-save\\\", onClick: dojo.hitch(this, this.save)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\\"Metadata\\\", iconClass: \\\"icon-16-actions-document-properties\\\", onClick: dojo.hitch(this, this.editMetadata)}));\r\n\r\n	        this.toolbar.addChild(new dijit.form.Button({label: \\\"About\\\", onClick: dojo.hitch(this, this.about), iconClass: \\\"icon-16-apps-help-browser\\\"}));\r\n\r\n	this.win.addChild(this.toolbar);\r\n	this.win.onDestroy = dojo.hitch(this, this.kill);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.new();\r\n}\r\n\r\nthis.kill = function()\r\n{\r\n	if(typeof this.loadwin != \\\"undefined\\\") {\r\n		if(!this.loadwin.destroyed) this.loadwin.destroy();\r\n	}\r\n	if(typeof this.winn != \\\"undefined\\\") {\r\n		if(!this.winn.destroyed) this.winn.destroy();\r\n	}\r\n	if(!this.win.destroyed)this.win.destroy();\r\n	api.instances.setKilled(this.instance);\r\n}\r\n\r\nthis.new = function()\r\n{\r\n	this.app = {\r\n		ID: -1,\r\n		code: \\\"\\\",\r\n		name: \\\"NewApp\\\",\r\n		email: \\\"AppCreator@iRule.com\\\",\r\n		version: \\\"1.0\\\",\r\n		category: \\\"accessories\\\",\r\n		maturity: \\\"alpha\\\",\r\n		author: \\\"NewApp Creator\\\"\r\n	};\r\n	this.editor.value=\\\"\\\";\r\n}\r\nthis.about = function() {\r\n	api.ui.alert({title: \\\"Katana IDE\\\", message:\\\"Psych Desktop Katana IDE - Application Creation IDE<br>Version \\\"+this.version});\r\n}\r\nthis.app = {};\r\nthis.save = function()\r\n{\r\n	this.editor.disabled = true;\r\n	this.app.code=this.editor.value;\r\n	this.app.callback = dojo.hitch(this, this.saved);\r\n	api.ide.save(this.app);\r\n}\r\n\r\nthis.saved = function(id)\r\n{\r\n	api.ide.load(parseInt(id), dojo.hitch(this, function(data) {\r\n		var scroll = this.editor.scrollTop;\r\n		var startPos = this.editor.selectionStart;\r\n		var endPos = this.editor.selectionEnd;\r\n		this.editor.value=data.code;\r\n		this.app = data;\r\n		this.editor.disabled = false;\r\n		this.editor.selectionStart = startPos+1;\r\n		this.editor.selectionEnd = endPos+1;\r\n		this.editor.scrollTop = scroll;\r\n		//api.ui.alert({title:\\\"Katana IDE\\\", message:\\\"Save Sucessful\\\"});\r\n		delete this.app.callback;\r\n	}));\r\n}\r\nthis.spawnID = 0;\r\nthis.editMetadata = function()\r\n{\r\n	this.tempCache  = this.editor.value;\r\n        this.editor.value = \\\"To continue working, close the metadata window.\\\";\r\n        this.editor.disabled = true;\r\n        this.winn = new api.window();\r\n        this.winn.title = \\\"Metadata\\\";\r\n        this.winn.onDestroy = dojo.hitch(this, this._editMetadata);\r\n        this.winn.write(\\\"Application ID(appid): <span id=\\\\\\\"appid\\\"+this.instance+this.blah+\\\"\\\\\\\">\\\"+this.app.ID+\\\"</span><br>\\\");\r\n        this.winn.write(\\\"Application Name: <span id=\\\\\\\"appname\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n        this.winn.write(\\\"Application Author: <span id=\\\\\\\"appauthor\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n        this.winn.write(\\\"Application E-mail: <span id =\\\\\\\"appemail\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n        this.winn.write(\\\"Application Version: <span id=\\\\\\\"appversion\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n        this.winn.write(\\\"Application Maturity: <span id=\\\\\\\"appmaturity\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n        this.winn.write(\\\"Application Category: <span id=\\\\\\\"appcategory\\\"+this.instance+this.blah+\\\"\\\\\\\"></span><br>\\\");\r\n	this.winn.write(\\\"<p>Closing this window will apply the metadata change.</p>\\\");\r\n	this.winn.show();\r\n	new dijit.form.TextBox({id: \\\"appname\\\"+this.instance+this.blah, name: \\\"appname\\\"+this.instance+this.blah}, document.getElementById(\\\"appname\\\"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: \\\"appauthor\\\"+this.instance+this.blah, name: \\\"appauthor\\\"+this.instance+this.blah}, document.getElementById(\\\"appauthor\\\"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: \\\"appemail\\\"+this.instance+this.blah, name: \\\"appemail\\\"+this.instance+this.blah}, document.getElementById(\\\"appemail\\\"+this.instance+this.blah));\r\n	new dijit.form.TextBox({value: this.app.version, id: \\\"appversion\\\"+this.instance+this.blah, name: \\\"appversion\\\"+this.instance+this.blah}, document.getElementById(\\\"appversion\\\"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: \\\"appmaturity\\\"+this.instance+this.blah, name: \\\"appmaturity\\\"+this.instance+this.blah}, document.getElementById(\\\"appmaturity\\\"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: \\\"appcategory\\\"+this.instance+this.blah, name: \\\"appcategory\\\"+this.instance+this.blah}, document.getElementById(\\\"appcategory\\\"+this.instance+this.blah));\r\n	dijit.byId(\\\"appname\\\"+this.instance+this.blah).setValue(this.app.name);\r\n	dijit.byId(\\\"appauthor\\\"+this.instance+this.blah).setValue(this.app.author);\r\n	dijit.byId(\\\"appemail\\\"+this.instance+this.blah).setValue(this.app.email);\r\n	dijit.byId(\\\"appversion\\\"+this.instance+this.blah).setValue(this.app.version);\r\n	dijit.byId(\\\"appcategory\\\"+this.instance+this.blah).setValue(this.app.category);\r\n	dijit.byId(\\\"appmaturity\\\"+this.instance+this.blah).setValue(this.app.maturity);\r\n}\r\n\r\nthis._editMetadata = function()\r\n{\r\n	this.app.name = dijit.byId(\\\"appname\\\"+this.instance+this.blah).getValue();\r\n	this.app.author = dijit.byId(\\\"appauthor\\\"+this.instance+this.blah).getValue();\r\n	this.app.email = dijit.byId(\\\"appemail\\\"+this.instance+this.blah).getValue();\r\n	this.app.version = dijit.byId(\\\"appversion\\\"+this.instance+this.blah).getValue();\r\n	this.app.category = dijit.byId(\\\"appcategory\\\"+this.instance+this.blah).getValue();\r\n	this.app.maturity = dijit.byId(\\\"appmaturity\\\"+this.instance+this.blah).getValue();\r\n	this.editor.value = this.tempCache;\r\n        this.editor.disabled = false;\r\n	this.blah++;\r\n}\r\n\r\nthis.execute = function()\r\n{\r\n	api.ide.execute(this.editor.value);\r\n}\r\n\r\nthis.load = function()\r\n{\r\n	//create a window with a list of apps to edit.\r\n	api.ide.getAppList(dojo.hitch(this, function(data){\r\n		this.loadwin = new api.window({title: \\\"Select App\\\", bodyWidget: \\\"LayoutContainer\\\"});\r\n		var pane = new dijit.layout.ContentPane({layoutAlign: \\\"client\\\"}, document.createElement(\\\"div\\\"));\r\n		content=document.createElement(\\\"ul\\\");\r\n		dojo.forEach(data, dojo.hitch(this, function(a){\r\n			var l = document.createElement(\\\"li\\\");\r\n			l.href=\\\"javascript://\\\";\r\n			l.innerHTML=a.name+\\\" \\\"+a.version;\r\n			l.title=a.ID;\r\n			l.style.cursor=\\\"pointer\\\";\r\n			dojo.connect(l, \\\"onclick\\\", this, function(e) {\r\n				console.debug(this);\r\n				this.loadwin.destroy();\r\n				api.ide.load(parseInt(e.target.title), dojo.hitch(this, function(data) {\r\n					this.editor.value=data.code;\r\n					this.app = data;\r\n				}));\r\n			});\r\n			content.appendChild(l);\r\n		}));\r\n		pane.setContent(content);\r\n		this.loadwin.addChild(pane);\r\n		this.loadwin.show();\r\n		this.loadwin.startup();\r\n		\r\n		new dijit.form.Button({label: \\\"Open\\\", onClick: dojo.hitch(this, function() {\r\n			\r\n		})});\r\n	}));\r\n}\r\n\r\nthis.onKey = function(e)\r\n{\r\n	if(e.keyCode == dojo.keys.TAB && !e.shiftKey && !e.ctrlKey && !e.altKey)\r\n	{\r\n		dojo.stopEvent(e);\r\n		if (document.selection)\r\n		{\r\n			this.editor.focus();\r\n			var sel = document.selection.createRange();\r\n			sel.text = \\\"	\\\";\r\n		}\r\n		else if (this.editor.selectionStart || this.editor.selectionStart == \\\'0\\\')\r\n		{\r\n			var scroll = this.editor.scrollTop;\r\n			var startPos = this.editor.selectionStart;\r\n			var endPos = this.editor.selectionEnd;\r\n			this.editor.value = this.editor.value.substring(0, startPos) + \\\"	\\\" + this.editor.value.substring(endPos, this.editor.value.length);\r\n			this.editor.selectionStart = startPos+1;\r\n			this.editor.selectionEnd = endPos+1;\r\n			this.editor.scrollTop = scroll;\r\n		} else {\r\n			this.editor.value += \\\"	\\\";\r\n		}\r\n	}\r\n}','1.1.1','Stable','Development'),
(6, 'Crosstalk Tester', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	if(!this.testing.destroyed) { this.testing.destroy(); }\r\n	api.crosstalk.unregisterHandler(this.handleID);\r\n	this.status = \\"killed\\";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init=function(args) {\r\n	this.testing = new api.window();\r\n	this.testing.title = \\"Please wait\\";\r\n	this.testing.write(\\"Registering handler...\\");\r\n	this.testing.show();\r\n	this.handleID = api.crosstalk.registerHandler({ instance: this.instance, callback: dojo.hitch(this, this.reply)});\r\n	this.testing.write(\\"OK! <br> Sending event...\\")\r\n	api.crosstalk.sendEvent({userid: 0, message: \\"Crosstalk finally completed! Woo hoo!\\", appid: this.id, instance: this.instance});\r\n	this.testing.write(\\"OK! <br> Everything OK! Awaiting Psych Desktop to check for events...\\");\r\n	this.status = \\"active\\";\r\n	this.testing.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\n\r\nthis.reply=function(reply) {\r\n\r\n	this.testing.write(\\"OK! <p>Results:<br>Message: \\"+reply.message+\\"<br>AppID: \\"+reply.appid);\r\n	api.ui.alert({title:\\"Crosstalk Test\\" message:\\"Crosstalk API test was sucessful. <br> Results are shown on the window.\\"});\r\n}\r\n', '1.0', 'Alpha', 'Development'),
(7, 'Administration Panel', 'psychiccyberfreak', 'bj@psychdesigns.net', 'this.kill = function() {\r\n	if(!this.win.destroyed) { this.win.destroy(); }\r\n	this.status = \\"killed\\";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args)\r\n{\r\n	dojo.require(\\"dijit.layout.SplitContainer\\");\r\n	dojo.require(\\"dijit.layout.LayoutContainer\\");\r\n	dojo.require(\\"dijit.layout.ContentPane\\");\r\n	dojo.require(\\"dijit.ProgressBar\\");\r\n	dojo.require(\\"dijit.Toolbar\\");\r\n	dojo.require(\\"dijit.form.Button\\");\r\n	//dojo.require(\\"dijit.layout.AccordionContainer\\");\r\n	dojo.require(\\"dijit.Menu\\");\r\n	//make window\r\n	this.win = new api.window({title: \\"Administration Panel\\", width: \\"500px\\", height: \\"400px\\"});\r\n	this.win.setBodyWidget(\\"SplitContainer\\", {sizerWidth: 7, orientation: \\"horizontal\\"});\r\n	var pane = new dijit.layout.ContentPane({sizeMin: 10, sizeShare: 20}, document.createElement(\\"div\\"));\r\n		var menu = new dijit.Menu({});\r\n		menu.domNode.style.width=\\"100%\\";\r\n			var item = new dijit.MenuItem({label: \\"Home\\",\r\n						       iconClass: \\"icon-22-actions-go-home\\",\r\n						       onClick: dojo.hitch(this, this.pages.home)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Users\\",\r\n						       iconClass: \\"icon-16-apps-system-users\\",\r\n						       onClick: dojo.hitch(this, this.pages.users)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Apps\\",\r\n						       iconClass: \\"icon-16-categories-applications-other\\",\r\n						       onClick: dojo.hitch(this, this.pages.apps)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Registry\\",\r\n						       iconClass: \\"icon-16-mimetypes-x-office-spreadsheet\\",\r\n						       onClick: dojo.hitch(this, this.pages.registry)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Crosstalk\\",\r\n						       iconClass: \\"icon-16-devices-network-wired\\",\r\n						       onClick: dojo.hitch(this, this.pages.crosstalk)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Filesystem\\",\r\n						       iconClass: \\"icon-16-devices-drive-harddisk\\",\r\n						       onClick: dojo.hitch(this, this.pages.filesystem)});\r\n			menu.addChild(item);\r\n		pane.setContent(menu.domNode);\r\n	this.win.addChild(pane);\r\n	var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement(\\"div\\"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\n		layout.addChild(this.main);\r\n		this.toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n		layout.addChild(this.toolbar);\r\n	this.win.addChild(layout);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.status = \\"active\\";\r\n	this.win.onDestroy = dojo.hitch(this, this.windowKill);\r\n	setTimeout(dojo.hitch(this, this.pages.home), 100);\r\n}\r\n\r\nthis.pages = {\r\n	home: function() {\r\n		this.toolbar.destroyDescendants();\r\n		var h = \\"Users online: <div dojoType=\\''dijit.ProgressBar\\'' progress=\\''60\\'' maximum=\\''300\\''></div>\\";\r\n		h += \\"Disk Usage: <div dojoType=\\''dijit.ProgressBar\\'' progress=\\''1\\'' maximum=\\''1\\''></div> (oh noes!)\\"\r\n		this.main.setContent(h);\r\n	},\r\n	users: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\"foo!\\"}));\r\n		this.main.setContent(\\"loading...\\");\r\n		desktop.admin.users.list(dojo.hitch(this, function(data) {\r\n			var html = \\"<table style=\\''width: 100%;\\''><thead><tr style=\\''background-color: #dddddd;\\''>\\";\r\n			for(field in data[0]) {\r\n				if(field != \\"password\\") html += \\"<td>\\"+field+\\"</td>\\";\r\n			}\r\n			html += \\"</tr></thead><tbody>\\";\r\n			dojo.forEach(data, function(item) {\r\n				html += \\"<tr>\\";\r\n				for(field in item) {\r\n					if(field != \\"password\\")html += \\"<td>\\"+item[field]+\\"</td>\\";\r\n				}\r\n				html += \\"</tr>\\";\r\n			});\r\n			html += \\"</tbody></table>\\";\r\n			this.main.setContent(html);\r\n		}));\r\n	},\r\n	apps: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the apps page\\");\r\n	},\r\n	registry: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the registry page\\");\r\n	},\r\n	crosstalk: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the crosstalk page\\");\r\n	},\r\n	filesystem: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the filesystem page\\");\r\n	}\r\n}\r\n', '1.0', 'Alpha', 'System'),
(8, 'Task Manager', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	if(!this.win.destroyed) { this.win.destroy(); }\r\n	this.timer = 0;\r\n	this.status = \\"killed\\";\r\n}\r\nthis.winKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args) {\r\n	dojo.require(\\"dijit.layout.LayoutContainer\\");\r\n	dojo.require(\\"dijit.layout.ContentPane\\");\r\n	dojo.require(\\"dijit.ProgressBar\\");\r\n	dojo.require(\\"dijit.Toolbar\\");\r\n	dojo.require(\\"dijit.form.Button\\");\r\n	dojo.require(\\"dijit.Menu\\");\r\n	//make window\r\n	this.win = new api.window({title: \\"Task Manager\\", width: \\"500px\\", height: \\"400px\\"});\r\n	this.win.setBodyWidget(\\"LayoutContainer\\", {});\r\n	var toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n	toolbar.addChild(new dijit.form.Button({label: \\"About\\", onClick: dojo.hitch(this, this.about), iconClass: \\"icon-16-apps-help-browser\\"}));\r\n	toolbar.addChild(new dijit.form.Button({label: \\"Exit\\", onClick: dojo.hitch(this, this.kill), iconClass: \\"icon-16-actions-system-log-out\\"}));\r\n	this.win.addChild(toolbar);\r\n	//var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement(\\"div\\"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\n		//layout.addChild(this.main);\r\n		//this.toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n		//layout.addChild(this.toolbar);\r\n	this.win.addChild(this.main);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.win.onDestroy = dojo.hitch(this, this.winKill);\r\n	this.status = \\"active\\";\r\n	this.main.setContent(\\"Getting processes...\\");\r\n	this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n}\r\n\r\nthis.about = function() {\r\n	api.ui.alert({title: \\"Task Manager\\", message:\\"Psych Desktop Task Manager<br>Version \\"+this.version});\r\n}\r\n\r\nthis.executeKill = function(id) {\r\n	if(api.instances.getStatus(id) != \\"killed\\") {\r\n	api.instances.kill(id);\r\n	api.ui.alert({title: \\"Task Manager\\", message:\\"Instance \\"+id+\\" was killed sucessfully.\\"});\r\n	}\r\n	else {\r\n	api.ui.alert({title: \\"Task Manager\\", message:\\"This process has already been killed or has exited.\\"});\r\n	}\r\n	this.home();\r\n}\r\nthis.home = function() {\r\n		this.main.setContent(\\"Refreshing...\\");\r\n		var data = api.instances.getInstances();\r\n		var html = \\"<table style=\\''width: 100%;\\''><thead><tr style=\\''background-color: #dddddd;\\''><td>Name</td><td>Instance</td><td>AppID</td><td>Status</td><td>Actions</td></tr></thead><tbody>\\";\r\n		for(var x = 0; x<data.length; x++){\r\n		if(typeof(data[x]) == \\"object\\") { // Error handler, for some reason, it sometimes fucksup.\r\n		if(data[x].status != \\"killed\\") {\r\n		html += \\"<tr><td>\\"+data[x].name+\\"</td><td>\\"+data[x].instance+\\"</td><td>\\"+data[x].appid+\\"</td><td>\\"+data[x].status+\\"</td><td><a href=\\''javascript://\\'' onClick=\\''desktop.app.instances[\\"+this.instance+\\"].executeKill(\\"+data[x].instance+\\")\\''>Kill</a></td></tr>\\";\r\n		}\r\n		}\r\n		} \r\n		this.main.setContent(html);\r\n		this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n                //no idea why this doesn\\''t work ^^^\r\n		}\r\n', '1.0.1.1', 'Stable', 'System'),
(9,'RSS Reader','Psychiccyberfreak','will@psychdesigns.net','this.currentFeed = false;\nthis.init = function(args)\n{\n	dojo.require(\\\"dijit.layout.LayoutContainer\\\");\n	dojo.require(\\\"dijit.layout.SplitContainer\\\");\n	dojo.require(\\\"dijit.layout.ContentPane\\\");\n	dojo.require(\\\"dojox.widget.SortList\\\");\n	dojo.require(\\\"dijit.Toolbar\\\");\n	dojo.require(\\\"dijit.form.TextBox\\\");\n	dojo.require(\\\"dijit.form.Button\\\");\n\n	var css = document.createElement(\\\"link\\\");\n	css.rel = \\\"stylesheet\\\";\n	css.type= \\\"text/css\\\";\n	css.href= \\\"./dojo/dojox/widget/SortList/SortList.css\\\";\n	document.getElementsByTagName(\\\"head\\\")[0].appendChild(css);\n\n	this.win = new api.window({\n		title: \\\"RSS Reader\\\",\n		bodyWidget: \\\"LayoutContainer\\\"\n	});\n\n	this.toolbar = new dijit.Toolbar({layoutAlign: \\\"top\\\"});\n		var button = new dijit.form.Button({\n			label: \\\"Add Feed\\\",\n			iconClass: \\\"icon-22-actions-list-add\\\",\n			onClick: dojo.hitch(this, this.addFeedDialog)\n		});\n		this.toolbar.addChild(button);\n		var button = new dijit.form.Button({\n			label: \\\"Remove Feed\\\",\n			iconClass: \\\"icon-22-actions-list-remove\\\",\n			onClick: dojo.hitch(this, this.removeFeed)\n		});\n		this.toolbar.addChild(button);\n	this.win.addChild(this.toolbar);\n\n	this.hiddenBar = new dijit.layout.ContentPane({\n		layoutAlign: \\\"bottom\\\",\n		style: \\\"display: none; height: 0px;\\\"\n	}, document.createElement(\\\"div\\\"));\n\n	var client = new dijit.layout.SplitContainer({\n		orientation: \\\"horizontal\\\",\n		layoutAlign: \\\"client\\\"\n	}, document.createElement(\\\"div\\\"));\n\n	this.left = new dojox.widget.SortList({title: \\\"Feeds\\\", sortable: true});\n\n	this.feeds = [\n		{title: \\\"Psych Desktop\\\", url: \\\"http://desktop.psychdesigns.net/rss.xml\\\"}, \n		{title: \\\"Dojo Toolkit\\\", url: \\\"http://dojotoolkit.org/rss.xml\\\"},\n		{title: \\\"Ajaxian\\\", url: \\\"http://feeds.feedburner.com/ajaxian\\\"},\n		{title: \\\"Slashdot\\\", url: \\\"http://rss.slashdot.org/Slashdot/slashdot\\\"},\n		{title: \\\"xkcd\\\", url: \\\"http://www.xkcd.com/rss.xml\\\"},\n		{title: \\\"Psych\\\'s blog\\\", url: \\\"http://psychdesigns.net/psych/rss.xml\\\"}\n	];\n	dojo.forEach(this.feeds, dojo.hitch(this, function(e)\n	{\n		this.addFeed(e.title, e.url);\n	}));\n	this.left.startup();\n	client.addChild(this.left);\n\n	this.right = new dijit.layout.ContentPane({\n		style: \\\"overflow: auto;\\\",\n		minsize: 50,\n		sizeShare: 30\n	}, document.createElement(\\\"div\\\"));\n	client.addChild(this.right);\n\n	this.win.addChild(client);\n\n	this.win.show();\n	this.win.startup();\n}\n\nthis.changeFeeds = function(e)\n{\n	this.fetchFeed(e.target.title);\n	this.currentFeed = e.target;\n}\n\nthis.removeFeed = function(t) {\n	console.log(this.currentFeed);\n	if(this.currentFeed)\n	{\n		dojo.forEach(this.feeds, dojo.hitch(this, function(e) {\n			if(typeof e != \\\"undefined\\\")\n			{\n				if(e.url == this.currentFeed.title && e.title == this.currentFeed.textContent && this.currentFeed)\n				{\n					try\n					{\n						this.currentFeed.parentNode.removeChild(this.currentFeed);\n						for(var i=0; i<this.feeds.length; i++) {\n							var c = this.feeds[i];\n							if(c.title == this.currentFeed.textContent && c.url == this.currentFeed.title)\n							{\n								delete this.feeds[i];\n							}\n						}\n					} catch(exception) {}\n					this.currentFeed = false;\n				}\n			}\n		}));\n	}\n}\n\nthis.addFeedDialog = function()\n{\n	this.addfeedwin = new api.window({\n		title: \\\"Add Feed\\\",\n		width: \\\"300px\\\",\n		height: \\\"200px\\\"\n	});\n	this._form = {\n		title: new dijit.form.TextBox({}),\n		url: new dijit.form.TextBox({})\n	};\n	var line = document.createElement(\\\"div\\\");\n	var p = document.createElement(\\\"span\\\");\n	p.innerHTML = \\\"Title: \\\";\n	line.appendChild(p);\n	line.appendChild(this._form.title.domNode);\n	var line2 = document.createElement(\\\"div\\\");\n	var p = document.createElement(\\\"span\\\");\n	p.innerHTML = \\\"URL: \\\";\n	line2.appendChild(p);\n	line2.appendChild(this._form.url.domNode);\n	var button = new dijit.form.Button({\n		label: \\\"Add Feed\\\"\n	});\n	dojo.connect(button, \\\"onClick\\\", this, function(e) {\n		console.log(\\\"test\\\");\n	this.addFeed(this._form.title.getValue(), this._form.url.getValue());\n		this.addfeedwin.destroy();\n	})\n	this.addfeedwin.show();\n	this.addfeedwin.body.domNode.appendChild(line);\n	this.addfeedwin.body.domNode.appendChild(line2);\n	this.addfeedwin.body.domNode.appendChild(button.domNode);\n	this.addfeedwin.startup();\n}\n\nthis.addFeed = function(title, url)\n{\n	var p = document.createElement(\\\"li\\\");\n	p.innerHTML = title;\n	p.title = url;\n	dojo.connect(p, \\\"onclick\\\", this, this.changeFeeds);\n	this.left.containerNode.appendChild(p);\n	this.feeds.push({url: url, title: title});\n}\n\nthis.fetchFeed = function(url)\n{\n	dojo.xhrGet({\n		url: api.xsite(url),\n		preventCache: true,\n		load: dojo.hitch(this, function(data, ioArgs) {\n			var items = data.getElementsByTagName(\\\"item\\\");\n			var text = \\\"\\\";\n			dojo.forEach(items, function(item) {\n				var title = item.getElementsByTagName(\\\"title\\\")[0].textContent;\n				var content = item.getElementsByTagName(\\\"description\\\")[0].textContent;\n				var url = item.getElementsByTagName(\\\"link\\\")[0].textContent.replace(/\\\\\\\'/g,\\\'\\\\\\\\\\\\\\\'\\\').replace(/\\\\\\\"/g,\\\'\\\\\\\\\\\"\\\').replace(/\\\\\\\\/g,\\\'\\\\\\\\\\\\\\\\\\\').replace(/\\\\0/g,\\\'\\\\\\\\0\\\');\n				text += \\\"<div style=\\\'border: 1px solid black;\\\'><h4><a href=\\\'javascript:desktop.app.launch(2, {url: \\\\\\\"\\\"+escape(url)+\\\"\\\\\\\"})\\\'>\\\"+title+\\\"</a></h4><p>\\\"+content+\\\"</p></div>\\\";\n			});\n			this.right.setContent(text);\n		}),\n		handleAs: \\\"xml\\\"\n	});\n}','1.0','Alpha','Internet');
--END APPS------------------


--
-- Table structure for table `#__users`
-- 
DROP TABLE IF EXISTS `#__users`;
CREATE TABLE `#__users` (
  `username` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `password` mediumtext NOT NULL,
  `logged` tinyint(1) NOT NULL default '0',
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `level` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;


-- Registry
DROP TABLE IF EXISTS `#__registry`;
CREATE TABLE `#__registry` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `appid` int(20) NOT NULL,
  `name` mediumtext NOT NULL,
  `value` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

-- Config
DROP TABLE IF EXISTS `#__config`;
CREATE TABLE `#__config` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `value` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

--crosstalk
DROP TABLE IF EXISTS `#__crosstalk`;
CREATE TABLE `#__crosstalk` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `message` mediumtext NOT NULL,
  `sender` mediumtext NOT NULL,
  `appID` int(11) NOT NULL,
  `instance` int(11) NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;
