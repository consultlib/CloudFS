--    Psych Desktop
--    Copyright (C) 2006 Psychiccyberfreak
 --
  --  This program is free software; you can redistribute it and/or modify
  --  it under the terms of the GNU General Public License as published by
  --  the Free Software Foundation; either version 2 of the License, or
  --  (at your option) any later version.
  --
  --  This program is distributed in the hope that it will be useful,
  --  but WITHOUT ANY WARRANTY; without even the implied warranty of
  --  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  --  GNU General Public License for more details.

  --  You should have received a copy of the GNU General Public License along
  --  with this program; if not, write to the Free Software Foundation, Inc.,
  --  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  --
-- NOTE: DON'T ACTUALLY RUN THIS! THE INSTALLER (install.php) will install for you!
-- Changed the charset to utf8, it's more standard...
-- Also fixed that nasty "there can be only one auto column and it must be defined as a key" bug.
-- Now the user can specify a prefix! Woo Hoo!!!
-- --------------------------------------------------------

--Do not remove this; it is for the script that automatically updates the
--demo on the website

--START APPS------------------

-- 
-- Table structure for table `#__apps`
--
DROP TABLE IF EXISTS `#__apps`;
CREATE TABLE `#__apps` (
  `ID` int(20) NOT NULL auto_increment,
  `name` mediumtext NOT NULL,
  `author` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `code` longtext NOT NULL,
  `version` text NOT NULL,
  `maturity` mediumtext NOT NULL,
  `category` mediumtext NOT NULL,
  PRIMARY KEY  (`ID`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

-- 
-- Dumping data for table `#__apps`
-- 

REPLACE INTO `#__apps` (`ID`, `name`, `author`, `email`, `code`, `version`, `maturity`, `category`) VALUES 
(1, 'Calculator', 'Psychcf', 'will@psychdesigns.net', 'this.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args)\r\n{\r\nwinHTML  = ''<form style="height: 12%; overflow: hidden;" onSubmit="return desktop.app.instances[''+this.instance+''].evaluate();"><input type="text" id="results''+this.instance+''" style="text-align: right; width: 100%;" /></form>'';\r\n//------------------\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''(\\''">(</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\'')\\''">)</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%; visibility: hidden;"> </button>''\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value = \\''\\''">C</button>'';\r\n//------------------\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''7\\''">7</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''8\\''">8</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''9\\''">9</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''/\\''">/</button>'';\r\n//------------------\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''4\\''">4</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''5\\''">5</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''6\\''">6</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''*\\''">*</button>'';\r\n//------------------\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''1\\''">1</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''2\\''">2</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''3\\''">3</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''-\\''">-</button>'';\r\n//------------------\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''0\\''">0</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''.\\''">.</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="desktop.app.instances[''+this.instance+''].evaluate()">=</button>'';\r\nwinHTML += ''<button style="width: 25%; height: 16%;" onClick="document.getElementById(\\''results''+this.instance+''\\'').value += \\''+\\''">+</button>'';\r\n//-------------------\r\nthis.window = new api.window();\r\nthis.window.title="Calculator";\r\nthis.window.write(winHTML);\r\nthis.window.width="200px";\r\nthis.window.height="235px";\r\nthis.window.show();\r\nthis.status = "active";\r\nthis.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\nthis.evaluate = function()\r\n{\r\n     if(document.getElementById("results"+this.instance).value != "")\r\n     {\r\n          try{ eval("document.getElementById(''results''+this.instance).value = "+document.getElementById("results"+this.instance).value); }\r\n          catch(e) { document.getElementById(''results''+this.instance).value = "ERROR"; }\r\n     }\r\n     return false;\r\n}', '1.0', 'Alpha', 'Accessories'),
(2, 'Web Browser', 'Psychcf', 'will@psychdesigns.net', 'this.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args)\r\n{\r\nthis.window = new api.window();\r\nthis.window.write(''<form name="submitbox" action="#" onSubmit="return desktop.app.instances[''+this.instance+''].go()" >'');\r\nthis.window.write(''<form name="submitbox" action="#" onSubmit="return desktop.app.instances[''+this.instance+''].go()" >'');\r\nthis.window.write(''<input type="text" id="browserUrlBox''+this.instance+''" value="http://www.google.com/" style="width: 94%;" />'');\r\nthis.window.write(''<input type="button" value="Go" onClick="desktop.app.instances[''+this.instance+''].go()" style="width: 6%;"><br />'');\r\nthis.window.write(''<iframe style="width: 99%; height: 90%; background-color: #FFFFFF;" src="http://www.google.com" id="browserIframe''+this.instance+''" /></form>'');\r\nthis.window.title="Web Browser";\r\nthis.window.height="420px";\r\nthis.window.width="500px";\r\nthis.window.show();\r\nthis.status = "active";\r\nthis.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\n\r\nthis.go = function()\r\n{\r\nurlbox = document.getElementById("browserUrlBox"+this.instance);\r\nURL = urlbox.value;\r\nif(URL.charAt(4) == ":" && URL.charAt(5) == "/" && URL.charAt(6) == "/")\r\n{\r\n}\r\nelse\r\n{\r\n//but wait, what if it''s an FTP site?\r\nif(URL.charAt(3) == ":" && URL.charAt(4) == "/" && URL.charAt(5) == "/")\r\n{\r\n}\r\nelse\r\n{\r\n//if it starts with an "ftp.", it''s most likely an FTP site.\r\nif((URL.charAt(0) == "F" || URL.charAt(0) == "f") && (URL.charAt(1) == "T" || URL.charAt(1) == "t") && (URL.charAt(2) == "P" || URL.charAt(2) == "p") && URL.charAt(3) == ".")\r\n{\r\nURL = "ftp://"+URL;\r\n}\r\nelse\r\n{\r\n//ok, it''s probably a plain old HTTP site...\r\nURL = "http://"+URL;\r\n}\r\n}\r\n}\r\nIframe = document.getElementById("browserIframe"+this.instance);\r\nIframe.src = URL;\r\nurlbox.value = URL;\r\nreturn false;\r\n}', '1.0', 'Alpha', 'Internet'),
(3, 'Control Panel', 'Psychcf', 'will@psychdesigns.net', 'dojo.require("dojo.parser");\r\ndojo.require("dijit.form.TextBox");\r\ndojo.require("dijit.ColorPalette");\r\ndojo.require("dijit.layout.ContentPane");\r\ndojo.require("dijit.layout.LayoutContainer");\r\ndojo.require("dijit.layout.TabContainer");\r\ndojo.require("dijit.form.Form");\r\ndojo.require("dijit.form.CheckBox");\r\ndojo.require("dijit.Toolbar");\r\nthis.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args) {\r\n	this.open();\r\n}\r\nthis.processUserName = function(username) {\r\n	dojo.byId("userName"+this.instance).innerHTML = username;\r\n}\r\nthis.processUserEmail = function(useremail) {\r\n	dojo.byId("userEmail"+this.instance).innerHTML = useremail;\r\n}\r\nthis.processUserID = function(userid) {\r\n	dojo.byId("userID"+this.instance).innerHTML = userid;\r\n}\r\nthis.processUserLevel = function(userlevel) {\r\n	dojo.byId("userLevel"+this.instance).innerHTML = userlevel;\r\n}\r\nthis.processThemes = function(theme) {\r\n	output = "";\r\n	for(x=0;x<theme.length;x++) {\r\n	if(typeof(theme[x]) != "undefined") {\r\n		output += "<li>"+theme[x]+"</li><br>";\r\n	}\r\n	}\r\n	dojo.byId("themeList"+this.instance).innerHTML = output;\r\n}\r\nthis.open = function(args)\r\n{\r\n	this.window = new api.window();\r\n	this.window.title="Control Panel";\r\n	this.window.width="620px";\r\n	this.window.height="410px";\r\n	this.window.setBodyWidget("LayoutContainer", {});\r\n	var toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n	toolbar.addChild(new dijit.form.Button({label: "About", onClick: dojo.hitch(this, this.about), iconClass: "icon-16-apps-help-browser"}));\r\n	toolbar.addChild(new dijit.form.Button({label: "Save to server", onClick: dojo.hitch(this, this.processSave), iconClass: "icon-16-actions-document-save"}));\r\n	this.window.addChild(toolbar);\r\n	var tabs = new dijit.layout.TabContainer({layoutAlign: "client"}, document.createElement("div"));\r\n		var wallpaper = new dijit.layout.ContentPane({title: "Wallpaper"}, document.createElement("div"));\r\n		var winHTML = "<fieldset><legend>Color</legend>";\r\n		winHTML += "<div id=\\"colorThing"+this.instance+"\\"></div>";\r\n		winHTML += "<br /><br /><b>HTML Color:</b><div id=\\"colorPick"+this.instance+"\\"></div>";\r\n		winHTML += "</fieldset>";\r\n		winHTML += "<fieldset><legend>Background Image</legend>";\r\n		winHTML += "Default<div id=\\"radio1"+this.instance+"\\"></div>None<div id=\\"radio2"+this.instance+"\\"></div>";\r\n		winHTML += "<br /><b>Image URL: </b><input type=''text'' name=''image"+this.instance+"'' value=''"+ desktop.config.wallpaper.image +"'' id=''image"+this.instance+"'' />";\r\n		winHTML += "</fieldset>"\r\n		wallpaper.setContent(winHTML);\r\n		tabs.addChild(wallpaper);\r\n\r\n		var themes = new dijit.layout.ContentPane({title: "Themes"}, document.createElement("div"));\r\n		winHTML = "Current theme: <span id=\\"currentTheme"+this.instance+"\\">"+desktop.config.theme+"</span> theme.<br><br><fieldset><legend>Change theme</legend>Theme Name: <input type=\\"text\\" name=\\"theme"+this.instance+"\\" id=\\"theme"+this.instance+"\\" value=\\""+desktop.config.theme+"\\"></fieldset><p><p><fieldset><legend>Installed Themes</legend><span id=\\"themeList"+this.instance+"\\">obtaining...</span></fieldset>";\r\n		themes.setContent(winHTML);\r\n		tabs.addChild(themes);\r\n\r\n		var performance = new dijit.layout.ContentPane({title: "Performance"}, document.createElement("div"));\r\n		winHTML = "Effects: <input checked type=''checkbox'' value=''true'' name=''bbbbb'' id=''bbbbb"+this.instance+"''><br><br>Disabling effects can have a major speed boost on a slow machine. <br> If you have a high-end machine, you are recommended to leave effects on."; \r\n		performance.setContent(winHTML);\r\n		tabs.addChild(performance);\r\n\r\n		var account = new dijit.layout.ContentPane({title: "Account Details"}, document.createElement("div"));\r\n		winHTML = "Account details: <br><b>UserID:</b> <span id=\\"userID"+this.instance+"\\">obtaining...</span><br><b>Username:</b> <span id=\\"userName"+this.instance+"\\">obtaining...</span><br><b>E-mail:</b> <span id=\\"userEmail"+this.instance+"\\">obtaining...</span><br><b>Password:</b> (hidden)<br><b>Userlevel:</b> <span id=\\"userLevel"+this.instance+"\\">obtaining...</span>"; \r\n		account.setContent(winHTML);\r\n		tabs.addChild(account);\r\n\r\n		var password = new dijit.layout.ContentPane({title: "Change Details"}, document.createElement("div"));\r\n		winHTML = "Current Password: <span id=\\"oldPass"+this.instance+"\\"></span><br>(To authenticate any changes on this page you need to insert this) <p> New Password: <span id=\\"newPass"+this.instance+"\\"></span><br>New Password (Confirm):<span id=\\"newPassConfirm"+this.instance+"\\"></span><p>E-mail:<span id=\\"email"+this.instance+"\\"></span><div id=\\"buttonMaybe"+this.instance+"\\"></div>";\r\n		password.setContent(winHTML);\r\n		tabs.addChild(password); \r\n\r\n		var advanced = new dijit.layout.ContentPane({title: "Advanced"}, document.createElement("div"));\r\n		winHTML = "debug: <div id=\\"debug"+this.instance+"\\"></div> <p> crosstalkPing:<span style=\\"display: inline\\" id=\\"crosstalkPing"+this.instance+"\\"></span><span id=\\"buttonMaybe"+this.instance+"\\"></span><p><b>debug:</b> an option that enables some advanced output and options.(dev only). <br> <b>crosstalkPing:</b> how often the desktop communicates with the server. (in miliseconds).";\r\n		advanced.setContent(winHTML);\r\n		tabs.addChild(advanced); \r\n\r\n	this.window.addChild(tabs);\r\n	this.window.show();\r\n	this.window.startup();\r\n	this.status = "active";\r\n	this.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n	new dijit.form.TextBox({id: "theme"+this.instance, name: "theme"+this.instance}, document.getElementById("theme"+this.instance));\r\n	new dijit.ColorPalette({palette: "7x10", onChange: dojo.hitch(this, this.colorChange)}, document.getElementById("colorThing"+this.instance));\r\n	new dijit.form.TextBox({id: "colorPick"+this.instance, name: "colorPick"+this.instance}, document.getElementById("colorPick"+this.instance));\r\n	new dijit.form.TextBox({id: "oldPass"+this.instance, name: "oldPass"+this.instance}, document.getElementById("oldPass"+this.instance));\r\n	new dijit.form.TextBox({id: "newPass"+this.instance, name: "newPass"+this.instance}, document.getElementById("newPass"+this.instance));\r\n	new dijit.form.TextBox({id: "newPassConfirm"+this.instance, name: "newPassConfirm"+this.instance}, document.getElementById("newPassConfirm"+this.instance));\r\n	new dijit.form.TextBox({id: "image"+this.instance, name: "image"+this.instance}, document.getElementById("image"+this.instance));\r\n	new dijit.form.RadioButton({checked: false, name:"radiobutton",id:"radio1"+this.instance}, document.getElementById("radio1"+this.instance));\r\n	new dijit.form.RadioButton({checked: false, name:"radiobutton",id:"radio2"+this.instance}, document.getElementById("radio2"+this.instance));\r\n	new dijit.form.CheckBox({name:"fx"+this.instance, id:"fx"+this.instance}, document.getElementById("bbbbb"+this.instance));\r\n	new dijit.form.CheckBox({name:"debug"+this.instance, id:"debug"+this.instance}, document.getElementById("debug"+this.instance));\r\n	new dijit.form.TextBox({id: "crosstalkPing"+this.instance, name: "crosstalkPing"+this.instance}, document.getElementById("crosstalkPing"+this.instance));\r\n	new dijit.form.TextBox({id: "email"+this.instance, name: "email"+this.instance}, document.getElementById("email"+this.instance));\r\n	dijit.byId("colorPick"+this.instance).setValue(desktop.config.wallpaper.color);\r\n	dijit.byId("theme"+this.instance).setValue(desktop.config.theme);\r\n	dijit.byId("image"+this.instance).setValue(desktop.config.wallpaper.image);\r\n	dijit.byId("fx"+this.instance).setChecked(desktop.config.fx);\r\n	dijit.byId("debug"+this.instance).setChecked(desktop.config.debug);\r\n	dijit.byId("crosstalkPing"+this.instance).setValue(desktop.config.crosstalkPing);\r\n	api.user.getUserName(dojo.hitch(this, this.processUserName));\r\n	api.user.getUserID(dojo.hitch(this, this.processUserID));\r\n	api.user.getUserLevel(dojo.hitch(this, this.processUserLevel));\r\n	api.user.getUserEmail(dojo.hitch(this, this.processUserEmail));\r\n	desktop.theme.list(dojo.hitch(this, this.processThemes));\r\n}\r\nthis.radioButton = function(a) {\r\n	alert(a);\r\n}\r\nthis.colorChange = function(color) {\r\n	dijit.byId("colorPick"+this.instance).setValue(color);\r\n}\r\nthis.about = function() {\r\n	api.ui.alert({title: "Control Panel", message:"Psych Desktop Control Panel<br>Version "+this.version});\r\n}\r\nthis.processSave = function() {\r\n	var old = dijit.byId("oldPass"+this.instance).getValue();\r\n	var newa = dijit.byId("newPass"+this.instance).getValue();\r\n	var newConfirm = dijit.byId("newPassConfirm"+this.instance).getValue();\r\n	var email = dijit.byId("email"+this.instance).getValue();\r\n	if(old != "") {\r\n		if(newa != newConfirm) { \r\n			api.ui.alert({title: "Error", message:"New password and new confirm password do not match."});\r\n			return false; \r\n		}\r\n		if(email != "") { desktop.user.changeUserEmail({old: old, newemail: email, callback: function(a) {\r\n		if(a == 1) {\r\n		api.ui.alert({title:"E-mail Change Result", message: "E-mail change unsucessful. Check that password is correct."});\r\n		}\r\n		else {\r\n		api.ui.alert({title:"E-mail Change Result", message: "E-mail changed."});\r\n		}\r\n		}});}\r\n		if(newa != "") { desktop.user.changeUserPassword({old: old, newpass: newa, callback:function(a) {\r\n		if(a == 1) {\r\n		api.ui.alert({title:"Password Change Result", message: "Password change unsuccessful. Check that your old password is correct."});\r\n		}\r\n		else {\r\n		api.ui.alert({title:"Password Change Result", message: "Password change successful."});\r\n		}\r\n		}});}\r\n		dijit.byId("oldPass"+this.instance).setValue("");\r\n		dijit.byId("newPass"+this.instance).setValue("");\r\n		dijit.byId("newPassConfirm"+this.instance).setValue("");\r\n		dijit.byId("email"+this.instance).setValue("");\r\n	}\r\n	var image=dijit.byId("image"+this.instance).getValue();\r\n	var color=dijit.byId("colorPick"+this.instance).getValue();\r\n	var fx=dijit.byId("fx"+this.instance).checked;\r\n	var theme=dijit.byId("theme"+this.instance).getValue();\r\n	var debug=dijit.byId("debug"+this.instance).checked;\r\n	var crosstalkPing=dijit.byId("crosstalkPing"+this.instance).getValue();\r\n	desktop.theme.set(theme);\r\n	dojo.byId("currentTheme"+this.instance).innerHTML = theme;\r\n	desktop.wallpaper.set(image);\r\n	desktop.wallpaper.setColor(color);\r\n	desktop.config.debug = debug;\r\n	desktop.config.crosstalkPing = parseInt(crosstalkPing);\r\n	desktop.config.wallpaper.image = image;\r\n	desktop.config.wallpaper.color = color;\r\n	desktop.config.fx = fx;\r\n	desktop.config.save();\r\n	api.ui.alert({title: "Notice", message: "Changes were applied successfully."});\r\n	api.user.getUserName(dojo.hitch(this, this.processUserName));\r\n	api.user.getUserID(dojo.hitch(this, this.processUserID));\r\n	api.user.getUserLevel(dojo.hitch(this, this.processUserLevel));\r\n	api.user.getUserEmail(dojo.hitch(this, this.processUserEmail));\r\n}	', '1.0.5', 'Stable', 'System'),
(4, 'Notepad', 'Psychcf', 'will@psychdesigns.net', 'dojo.require("dijit.Toolbar");\r\ndojo.require("dijit.layout.ContentPane");\r\ndojo.require("dijit.layout.LayoutContainer");\r\nthis.kill = function() {\r\n	if(!this.window.destroyed) { this.window.destroy(); }\r\n	if(!this.window2.destroyed) { this.window2.destroy(); }\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init=function(args)\r\n{\r\nthis.window2 = new api.window();\r\nthis.window2.write("Please wait whilst we get data from the registry...");\r\nthis.window2.height="100px";\r\nthis.window2.width="100px";\r\nthis.window2.title="Please wait...";\r\nthis.window2.show();\r\napi.registry.get({appid:this.id, varname:"notepad", callback:dojo.hitch(this, this.notepad)});\r\n}\r\n\r\nthis.notepad=function(text) {\r\nthis.window2.destroy();\r\nthis.window = new api.window();\r\nthis.window.setBodyWidget("LayoutContainer", {});\r\nvar toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\ntoolbar.addChild(new dijit.form.Button({label: "Save to server", onClick: dojo.hitch(this, this.processSave), iconClass: "icon-16-actions-document-save"}));\r\ntoolbar.addChild(new dijit.form.Button({label: "Exit", onClick: dojo.hitch(this, this.exit), iconClass: "icon-16-actions-system-log-out"}));\r\nthis.window.addChild(toolbar);\r\nvar box = new dijit.layout.ContentPane({layoutAlign: "client"}, document.createElement("div"));\r\nthis.other = new dijit.layout.ContentPane({layoutAlign: "bottom", style: "height: 10%"}, document.createElement("div"));\r\nhtml = "<div padding=10>";\r\nhtml += "<textarea id=''notepad"+this.instance+"'' style=''width: 100%; height: 90%;''>";\r\nhtml += text.value;\r\nhtml += "</textarea>";\r\n//this.window.write("<input onclick=\\"note = document.getElementById(''notepad"+this.instance+"'').value.replace(/\\\\n/gi, '' '' ); api.registry.save("+this.id+", ''notepad'', note);\\" value=''Save'' type=''button'' />");\r\nbox.setContent(html);\r\nthis.other.setContent("Ready");\r\nthis.window.addChild(box);\r\nthis.window.addChild(this.other);\r\nthis.window.title="Notepad";\r\nthis.window.width="300px";\r\nthis.window.height="305px";\r\nthis.window.show();\r\nthis.window.startup();\r\nthis.status = "active";\r\nthis.window.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\n\r\nthis.processSave=function()\r\n{\r\n	\r\nnote = dojo.byId(''notepad''+this.instance).value.replace(/\\\\n/gi, '' '' );\r\napi.registry.save({appid: this.id, varname:''notepad'', value: note});\r\nthis.other.setContent("save sucessful.");\r\nthis.window.startup();\r\n\r\n}\r\n\r\nthis.exit=function(){\r\nthis.other.setContent("goodbye!");\r\n	this.window.destroy();\r\n}\r\n\r\n', '1.0', 'Beta', 'Accessories'),
(5, 'Katana IDE', 'Psychcf', 'will@psychdesigns.net', 'this.blah = 0;\r\nthis.init = function(args)\r\n{\r\n	api.instances.setActive(this.instance);\r\n	dojo.require("dijit.layout.LayoutContainer");\r\n	dojo.require("dijit.form.Textarea");\r\n	dojo.require("dijit.form.Button");\r\n        dojo.require("dijit.form.TextBox");\r\n	dojo.require("dijit.Toolbar");\r\n	this.win = new api.window({\r\n		title: "Katana IDE",\r\n	});\r\n	this.win.setBodyWidget("LayoutContainer", {});\r\n	\r\n	var client = new dijit.layout.ContentPane({style: "overflow-y: auto; overflow-x: hidden;", layoutAlign: "client"}, document.createElement("div"));\r\n		this.editor = document.createElement("textarea");\r\n		this.editor.style.width="100%";	\r\n		this.editor.style.height="100%";\r\n		this.editor.style.border="0px none";\r\n		this.editor.style.margin="0px";\r\n		dojo.connect(this.editor, "onkeypress", this, this.onKey);\r\n		client.setContent(this.editor);\r\n	this.win.addChild(client);\r\n	\r\n	this.toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n		this.toolbar.addChild(new dijit.form.Button({label: "New", iconClass: "icon-16-actions-document-new", onClick: dojo.hitch(this, this.new)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: "Open", iconClass: "icon-16-actions-document-open", onClick: dojo.hitch(this, this.load)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: "Save", iconClass: "icon-16-actions-document-save", onClick: dojo.hitch(this, this.save)}));\r\n		this.toolbar.addChild(new dijit.form.Button({label: "Metadata", iconClass: "icon-16-actions-document-properties", onClick: dojo.hitch(this, this.editMetadata)}));\r\n\r\n	        this.toolbar.addChild(new dijit.form.Button({label: "About", onClick: dojo.hitch(this, this.about), iconClass: "icon-16-apps-help-browser"}));\r\n\r\n	this.win.addChild(this.toolbar);\r\n	this.win.onDestroy = dojo.hitch(this, this.kill);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.new();\r\n}\r\n\r\nthis.kill = function()\r\n{\r\n	if(typeof this.loadwin != "undefined") {\r\n		if(!this.loadwin.destroyed) this.loadwin.destroy();\r\n	}\r\n	if(typeof this.winn != "undefined") {\r\n		if(!this.winn.destroyed) this.winn.destroy();\r\n	}\r\n	if(!this.win.destroyed)this.win.destroy();\r\n	api.instances.setKilled(this.instance);\r\n}\r\n\r\nthis.new = function()\r\n{\r\n	this.app = {\r\n		ID: -1,\r\n		code: "",\r\n		name: "NewApp",\r\n		email: "AppCreator@iRule.com",\r\n		version: "1.0",\r\n		category: "accessories",\r\n		maturity: "alpha",\r\n		author: "NewApp Creator"\r\n	};\r\n	this.editor.value="";\r\n}\r\nthis.about = function() {\r\n	api.ui.alert({title: "Katana IDE", message:"Psych Desktop Katana IDE - Application Creation IDE<br>Version "+this.version});\r\n}\r\nthis.app = {};\r\nthis.save = function()\r\n{\r\n	this.editor.disabled = true;\r\n	this.app.code=this.editor.value;\r\n	this.app.callback = dojo.hitch(this, this.saved);\r\n	api.ide.save(this.app);\r\n}\r\n\r\nthis.saved = function(id)\r\n{\r\n	api.ide.load(parseInt(id), dojo.hitch(this, function(data) {\r\n		var scroll = this.editor.scrollTop;\r\n		var startPos = this.editor.selectionStart;\r\n		var endPos = this.editor.selectionEnd;\r\n		this.editor.value=data.code;\r\n		this.app = data;\r\n		this.editor.disabled = false;\r\n		this.editor.selectionStart = startPos+1;\r\n		this.editor.selectionEnd = endPos+1;\r\n		this.editor.scrollTop = scroll;\r\n		//api.ui.alert({title:"Katana IDE", message:"Save Sucessful"});\r\n		delete this.app.callback;\r\n	}));\r\n}\r\nthis.spawnID = 0;\r\nthis.editMetadata = function()\r\n{\r\n	this.tempCache  = this.editor.value;\r\n        this.editor.value = "To continue working, close the metadata window.";\r\n        this.editor.disabled = true;\r\n        this.winn = new api.window();\r\n        this.winn.title = "Metadata";\r\n        this.winn.onDestroy = dojo.hitch(this, this._editMetadata);\r\n        this.winn.write("Application ID(appid): <span id=\\"appid"+this.instance+this.blah+"\\">"+this.app.ID+"</span><br>");\r\n        this.winn.write("Application Name: <span id=\\"appname"+this.instance+this.blah+"\\"></span><br>");\r\n        this.winn.write("Application Author: <span id=\\"appauthor"+this.instance+this.blah+"\\"></span><br>");\r\n        this.winn.write("Application E-mail: <span id =\\"appemail"+this.instance+this.blah+"\\"></span><br>");\r\n        this.winn.write("Application Version: <span id=\\"appversion"+this.instance+this.blah+"\\"></span><br>");\r\n        this.winn.write("Application Maturity: <span id=\\"appmaturity"+this.instance+this.blah+"\\"></span><br>");\r\n        this.winn.write("Application Category: <span id=\\"appcategory"+this.instance+this.blah+"\\"></span><br>");\r\n	this.winn.write("<p>Closing this window will apply the metadata change.</p>");\r\n	this.winn.show();\r\n	new dijit.form.TextBox({id: "appname"+this.instance+this.blah, name: "appname"+this.instance+this.blah}, document.getElementById("appname"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: "appauthor"+this.instance+this.blah, name: "appauthor"+this.instance+this.blah}, document.getElementById("appauthor"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: "appemail"+this.instance+this.blah, name: "appemail"+this.instance+this.blah}, document.getElementById("appemail"+this.instance+this.blah));\r\n	new dijit.form.TextBox({value: this.app.version, id: "appversion"+this.instance+this.blah, name: "appversion"+this.instance+this.blah}, document.getElementById("appversion"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: "appmaturity"+this.instance+this.blah, name: "appmaturity"+this.instance+this.blah}, document.getElementById("appmaturity"+this.instance+this.blah));\r\n	new dijit.form.TextBox({id: "appcategory"+this.instance+this.blah, name: "appcategory"+this.instance+this.blah}, document.getElementById("appcategory"+this.instance+this.blah));\r\n	dijit.byId("appname"+this.instance+this.blah).setValue(this.app.name);\r\n	dijit.byId("appauthor"+this.instance+this.blah).setValue(this.app.author);\r\n	dijit.byId("appemail"+this.instance+this.blah).setValue(this.app.email);\r\n	dijit.byId("appversion"+this.instance+this.blah).setValue(this.app.version);\r\n	dijit.byId("appcategory"+this.instance+this.blah).setValue(this.app.category);\r\n	dijit.byId("appmaturity"+this.instance+this.blah).setValue(this.app.maturity);\r\n}\r\n\r\nthis._editMetadata = function()\r\n{\r\n	this.app.name = dijit.byId("appname"+this.instance+this.blah).getValue();\r\n	this.app.author = dijit.byId("appauthor"+this.instance+this.blah).getValue();\r\n	this.app.email = dijit.byId("appemail"+this.instance+this.blah).getValue();\r\n	this.app.version = dijit.byId("appversion"+this.instance+this.blah).getValue();\r\n	this.app.category = dijit.byId("appcategory"+this.instance+this.blah).getValue();\r\n	this.app.maturity = dijit.byId("appmaturity"+this.instance+this.blah).getValue();\r\n	this.editor.value = this.tempCache;\r\n        this.editor.disabled = false;\r\n	this.blah++;\r\n}\r\n\r\nthis.execute = function()\r\n{\r\n	api.ide.execute(this.editor.value);\r\n}\r\n\r\nthis.load = function()\r\n{\r\n	//create a window with a list of apps to edit.\r\n	api.ide.getAppList(dojo.hitch(this, function(data){\r\n		this.loadwin = new api.window({title: "Select App", bodyWidget: "LayoutContainer"});\r\n		var pane = new dijit.layout.ContentPane({layoutAlign: "client"}, document.createElement("div"));\r\n		content=document.createElement("ul");\r\n		dojo.forEach(data, dojo.hitch(this, function(a){\r\n			var l = document.createElement("li");\r\n			l.href="javascript://";\r\n			l.innerHTML=a.name+" "+a.version;\r\n			l.title=a.ID;\r\n			l.style.cursor="pointer";\r\n			dojo.connect(l, "onclick", this, function(e) {\r\n				console.debug(this);\r\n				this.loadwin.destroy();\r\n				api.ide.load(parseInt(e.target.title), dojo.hitch(this, function(data) {\r\n					this.editor.value=data.code;\r\n					this.app = data;\r\n				}));\r\n			});\r\n			content.appendChild(l);\r\n		}));\r\n		pane.setContent(content);\r\n		this.loadwin.addChild(pane);\r\n		this.loadwin.show();\r\n		this.loadwin.startup();\r\n		\r\n		new dijit.form.Button({label: "Open", onClick: dojo.hitch(this, function() {\r\n			\r\n		})});\r\n	}));\r\n}\r\n\r\nthis.onKey = function(e)\r\n{\r\n	if(e.keyCode == dojo.keys.TAB && !e.shiftKey && !e.ctrlKey && !e.altKey)\r\n	{\r\n		dojo.stopEvent(e);\r\n		if (document.selection)\r\n		{\r\n			this.editor.focus();\r\n			var sel = document.selection.createRange();\r\n			sel.text = "	";\r\n		}\r\n		else if (this.editor.selectionStart || this.editor.selectionStart == ''0'')\r\n		{\r\n			var scroll = this.editor.scrollTop;\r\n			var startPos = this.editor.selectionStart;\r\n			var endPos = this.editor.selectionEnd;\r\n			this.editor.value = this.editor.value.substring(0, startPos) + "	" + this.editor.value.substring(endPos, this.editor.value.length);\r\n			this.editor.selectionStart = startPos+1;\r\n			this.editor.selectionEnd = endPos+1;\r\n			this.editor.scrollTop = scroll;\r\n		} else {\r\n			this.editor.value += "	";\r\n		}\r\n	}\r\n}', '1.1.1', 'Stable', 'Development'),
(6, 'Crosstalk Tester', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	if(!this.testing.destroyed) { this.testing.destroy(); }\r\n	api.crosstalk.unregisterHandler(this.handleID);\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init=function(args) {\r\n	this.testing = new api.window();\r\n	this.testing.title = "Please wait";\r\n	this.testing.write("Registering handler...");\r\n	this.testing.show();\r\n	this.handleID = api.crosstalk.registerHandler({ instance: this.instance, callback: dojo.hitch(this, this.reply)});\r\n	this.testing.write("OK! <br> Sending event...")\r\n	api.crosstalk.sendEvent({userid: 0, message: "Crosstalk finally completed! Woo hoo!", appid: this.id, instance: this.instance});\r\n	this.testing.write("OK! <br> Everything OK! Awaiting Psych Desktop to check for events...");\r\n	this.status = "active";\r\n	this.testing.onDestroy = dojo.hitch(this, this.windowKill);\r\n}\r\n\r\nthis.reply=function(reply) {\r\n\r\n	this.testing.write("OK! <p>Results:<br>Message: "+reply.message+"<br>AppID: "+reply.appid);\r\n	api.ui.alert({title:"Crosstalk Test" message:"Crosstalk API test was sucessful. <br> Results are shown on the window."});\r\n}', '1.0', 'Alpha', 'Development'),
(7, 'Administration Panel', 'Psychcf', 'will@psychdesigns.net', 'this.kill = function() {\r\n	if(!this.win.destroyed) { this.win.destroy(); }\r\n	this.status = "killed";\r\n}\r\nthis.windowKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args)\r\n{\r\n	dojo.require("dijit.layout.SplitContainer");\r\n	dojo.require("dijit.layout.LayoutContainer");\r\n	dojo.require("dijit.layout.ContentPane");\r\n	dojo.require("dijit.ProgressBar");\r\n	dojo.require("dijit.Toolbar");\r\n	dojo.require("dijit.form.Button");\r\n	//dojo.require("dijit.layout.AccordionContainer");\r\n	dojo.require("dijit.Menu");\r\n	//make window\r\n	this.win = new api.window({title: "Administration Panel", width: "500px", height: "400px"});\r\n	this.win.setBodyWidget("SplitContainer", {sizerWidth: 7, orientation: "horizontal"});\r\n	var pane = new dijit.layout.ContentPane({sizeMin: 10, sizeShare: 20}, document.createElement("div"));\r\n		var menu = new dijit.Menu({});\r\n		menu.domNode.style.width="100%";\r\n			var item = new dijit.MenuItem({label: "Home",\r\n						       iconClass: "icon-22-actions-go-home",\r\n						       onClick: dojo.hitch(this, this.pages.home)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: "Users",\r\n						       iconClass: "icon-16-apps-system-users",\r\n						       onClick: dojo.hitch(this, this.pages.users)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: "Apps",\r\n						       iconClass: "icon-16-categories-applications-other",\r\n						       onClick: dojo.hitch(this, this.pages.apps)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: "Registry",\r\n						       iconClass: "icon-16-mimetypes-x-office-spreadsheet",\r\n						       onClick: dojo.hitch(this, this.pages.registry)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: "Crosstalk",\r\n						       iconClass: "icon-16-devices-network-wired",\r\n						       onClick: dojo.hitch(this, this.pages.crosstalk)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: "Filesystem",\r\n						       iconClass: "icon-16-devices-drive-harddisk",\r\n						       onClick: dojo.hitch(this, this.pages.filesystem)});\r\n			menu.addChild(item);\r\n		pane.setContent(menu.domNode);\r\n	this.win.addChild(pane);\r\n	var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement("div"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: "client"}, document.createElement("div"));\r\n		layout.addChild(this.main);\r\n		this.toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n		layout.addChild(this.toolbar);\r\n	this.win.addChild(layout);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.status = "active";\r\n	this.win.onDestroy = dojo.hitch(this, this.windowKill);\r\n	setTimeout(dojo.hitch(this, this.pages.home), 100);\r\n}\r\n\r\nthis.pages = {\r\n	home: function() {\r\n		this.toolbar.destroyDescendants();\r\n		var h = "Users online: <div dojoType=''dijit.ProgressBar'' progress=''60'' maximum=''300''></div>";\r\n		h += "Disk Usage: <div dojoType=''dijit.ProgressBar'' progress=''1'' maximum=''1''></div> (oh noes!)"\r\n		this.main.setContent(h);\r\n	},\r\n	users: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.toolbar.addChild(new dijit.form.Button({label: "foo!"}));\r\n		this.main.setContent("loading...");\r\n		desktop.admin.users.list(dojo.hitch(this, function(data) {\r\n			var html = "<table style=''width: 100%;''><thead><tr style=''background-color: #dddddd;''>";\r\n			for(field in data[0]) {\r\n				if(field != "password") html += "<td>"+field+"</td>";\r\n			}\r\n			html += "</tr></thead><tbody>";\r\n			dojo.forEach(data, function(item) {\r\n				html += "<tr>";\r\n				for(field in item) {\r\n					if(field != "password")html += "<td>"+item[field]+"</td>";\r\n				}\r\n				html += "</tr>";\r\n			});\r\n			html += "</tbody></table>";\r\n			this.main.setContent(html);\r\n		}));\r\n	},\r\n	apps: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent("This is the apps page");\r\n	},\r\n	registry: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent("This is the registry page");\r\n	},\r\n	crosstalk: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent("This is the crosstalk page");\r\n	},\r\n	filesystem: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent("This is the filesystem page");\r\n	}\r\n}', '1.0', 'Alpha', 'System'),
(8, 'Task Manager', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	if(!this.win.destroyed) { this.win.destroy(); }\r\n	this.timer = 0;\r\n	this.status = "killed";\r\n}\r\nthis.winKill = function() {\r\n	this.kill();\r\n}\r\nthis.init = function(args) {\r\n	dojo.require("dijit.layout.LayoutContainer");\r\n	dojo.require("dijit.layout.ContentPane");\r\n	dojo.require("dijit.ProgressBar");\r\n	dojo.require("dijit.Toolbar");\r\n	dojo.require("dijit.form.Button");\r\n	dojo.require("dijit.Menu");\r\n	//make window\r\n	this.win = new api.window({title: "Task Manager", width: "500px", height: "400px"});\r\n	this.win.setBodyWidget("LayoutContainer", {});\r\n	var toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n	toolbar.addChild(new dijit.form.Button({label: "About", onClick: dojo.hitch(this, this.about), iconClass: "icon-16-apps-help-browser"}));\r\n	toolbar.addChild(new dijit.form.Button({label: "Exit", onClick: dojo.hitch(this, this.kill), iconClass: "icon-16-actions-system-log-out"}));\r\n	this.win.addChild(toolbar);\r\n	//var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement("div"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: "client"}, document.createElement("div"));\r\n		//layout.addChild(this.main);\r\n		//this.toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n		//layout.addChild(this.toolbar);\r\n	this.win.addChild(this.main);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.win.onDestroy = dojo.hitch(this, this.winKill);\r\n	this.status = "active";\r\n	this.main.setContent("Getting processes...");\r\n	this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n}\r\n\r\nthis.about = function() {\r\n	api.ui.alert({title: "Task Manager", message:"Psych Desktop Task Manager<br>Version "+this.version});\r\n}\r\n\r\nthis.executeKill = function(id) {\r\n	if(api.instances.getStatus(id) != "killed") {\r\n	api.instances.kill(id);\r\n	api.ui.alert({title: "Task Manager", message:"Instance "+id+" was killed sucessfully."});\r\n	}\r\n	else {\r\n	api.ui.alert({title: "Task Manager", message:"This process has already been killed or has exited."});\r\n	}\r\n	this.home();\r\n}\r\nthis.home = function() {\r\n		this.main.setContent("Refreshing...");\r\n		var data = api.instances.getInstances();\r\n		var html = "<table style=''width: 100%;''><thead><tr style=''background-color: #dddddd;''><td>Name</td><td>Instance</td><td>AppID</td><td>Status</td><td>Actions</td></tr></thead><tbody>";\r\n		for(var x = 0; x<data.length; x++){\r\n		if(typeof(data[x]) == "object") { // Error handler, for some reason, it sometimes fucksup.\r\n		if(data[x].status != "killed") {\r\n		html += "<tr><td>"+data[x].name+"</td><td>"+data[x].instance+"</td><td>"+data[x].appid+"</td><td>"+data[x].status+"</td><td><a href=''javascript://'' onClick=''desktop.app.instances["+this.instance+"].executeKill("+data[x].instance+")''>Kill</a></td></tr>";\r\n		}\r\n		}\r\n		} \r\n		this.main.setContent(html);\r\n		this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n                //no idea why this doesn''t work ^^^\r\n		}', '1.0.1.1', 'Stable', 'System'),
(9, 'RSS Reader', 'Psychcf', 'will@psychdesigns.net', 'this.currentFeed = false;\r\nthis.init = function(args)\r\n{\r\n	dojo.require("dijit.layout.LayoutContainer");\r\n	dojo.require("dijit.layout.SplitContainer");\r\n	dojo.require("dijit.layout.ContentPane");\r\n	dojo.require("dojox.widget.SortList");\r\n	dojo.require("dijit.Toolbar");\r\n	dojo.require("dijit.form.TextBox");\r\n	dojo.require("dijit.form.Button");\r\n\r\n	var css = document.createElement("link");\r\n	css.rel = "stylesheet";\r\n	css.type= "text/css";\r\n	css.href= "./dojo/dojox/widget/SortList/SortList.css";\r\n	document.getElementsByTagName("head")[0].appendChild(css);\r\n\r\n	this.win = new api.window({\r\n		title: "RSS Reader",\r\n		bodyWidget: "LayoutContainer"\r\n	});\r\n\r\n	this.toolbar = new dijit.Toolbar({layoutAlign: "top"});\r\n		var button = new dijit.form.Button({\r\n			label: "Add Feed",\r\n			iconClass: "icon-22-actions-list-add",\r\n			onClick: dojo.hitch(this, this.addFeedDialog)\r\n		});\r\n		this.toolbar.addChild(button);\r\n		var button = new dijit.form.Button({\r\n			label: "Remove Feed",\r\n			iconClass: "icon-22-actions-list-remove",\r\n			onClick: dojo.hitch(this, this.removeFeed)\r\n		});\r\n		this.toolbar.addChild(button);\r\n	this.win.addChild(this.toolbar);\r\n\r\n	this.hiddenBar = new dijit.layout.ContentPane({\r\n		layoutAlign: "bottom",\r\n		style: "display: none; height: 0px;"\r\n	}, document.createElement("div"));\r\n\r\n	var client = new dijit.layout.SplitContainer({\r\n		orientation: "horizontal",\r\n		layoutAlign: "client"\r\n	}, document.createElement("div"));\r\n\r\n	this.left = new dojox.widget.SortList({title: "Feeds", sortable: true});\r\n\r\n	this.feeds = [\r\n		{title: "Psych Desktop", url: "http://desktop.psychdesigns.net/rss.xml"}, \r\n		{title: "Dojo Toolkit", url: "http://dojotoolkit.org/rss.xml"},\r\n		{title: "Ajaxian", url: "http://feeds.feedburner.com/ajaxian"},\r\n		{title: "Slashdot", url: "http://rss.slashdot.org/Slashdot/slashdot"},\r\n		{title: "xkcd", url: "http://www.xkcd.com/rss.xml"},\r\n		{title: "Psych''s blog", url: "http://psychdesigns.net/psych/rss.xml"}\r\n	];\r\n	dojo.forEach(this.feeds, dojo.hitch(this, function(e)\r\n	{\r\n		this.addFeed(e.title, e.url);\r\n	}));\r\n	this.left.startup();\r\n	client.addChild(this.left);\r\n\r\n	this.right = new dijit.layout.ContentPane({\r\n		style: "overflow: auto;",\r\n		minsize: 50,\r\n		sizeShare: 30\r\n	}, document.createElement("div"));\r\n	client.addChild(this.right);\r\n\r\n	this.win.addChild(client);\r\n\r\n	this.win.show();\r\n	this.win.startup();\r\n}\r\n\r\nthis.changeFeeds = function(e)\r\n{\r\n	this.fetchFeed(e.target.title);\r\n	this.currentFeed = e.target;\r\n}\r\n\r\nthis.removeFeed = function(t) {\r\n	console.log(this.currentFeed);\r\n	if(this.currentFeed)\r\n	{\r\n		dojo.forEach(this.feeds, dojo.hitch(this, function(e) {\r\n			if(typeof e != "undefined")\r\n			{\r\n				if(e.url == this.currentFeed.title && e.title == this.currentFeed.textContent && this.currentFeed)\r\n				{\r\n					try\r\n					{\r\n						this.currentFeed.parentNode.removeChild(this.currentFeed);\r\n						for(var i=0; i<this.feeds.length; i++) {\r\n							var c = this.feeds[i];\r\n							if(c.title == this.currentFeed.textContent && c.url == this.currentFeed.title)\r\n							{\r\n								delete this.feeds[i];\r\n							}\r\n						}\r\n					} catch(exception) {}\r\n					this.currentFeed = false;\r\n				}\r\n			}\r\n		}));\r\n	}\r\n}\r\n\r\nthis.addFeedDialog = function()\r\n{\r\n	this.addfeedwin = new api.window({\r\n		title: "Add Feed",\r\n		width: "300px",\r\n		height: "200px"\r\n	});\r\n	this._form = {\r\n		title: new dijit.form.TextBox({}),\r\n		url: new dijit.form.TextBox({})\r\n	};\r\n	var line = document.createElement("div");\r\n	var p = document.createElement("span");\r\n	p.innerHTML = "Title: ";\r\n	line.appendChild(p);\r\n	line.appendChild(this._form.title.domNode);\r\n	var line2 = document.createElement("div");\r\n	var p = document.createElement("span");\r\n	p.innerHTML = "URL: ";\r\n	line2.appendChild(p);\r\n	line2.appendChild(this._form.url.domNode);\r\n	var button = new dijit.form.Button({\r\n		label: "Add Feed"\r\n	});\r\n	dojo.connect(button, "onClick", this, function(e) {\r\n		console.log("test");\r\n	this.addFeed(this._form.title.getValue(), this._form.url.getValue());\r\n		this.addfeedwin.destroy();\r\n	})\r\n	this.addfeedwin.show();\r\n	this.addfeedwin.body.domNode.appendChild(line);\r\n	this.addfeedwin.body.domNode.appendChild(line2);\r\n	this.addfeedwin.body.domNode.appendChild(button.domNode);\r\n	this.addfeedwin.startup();\r\n}\r\n\r\nthis.addFeed = function(title, url)\r\n{\r\n	var p = document.createElement("li");\r\n	p.innerHTML = title;\r\n	p.title = url;\r\n	dojo.connect(p, "onclick", this, this.changeFeeds);\r\n	this.left.containerNode.appendChild(p);\r\n	this.feeds.push({url: url, title: title});\r\n}\r\n\r\nthis.fetchFeed = function(url)\r\n{\r\n	dojo.xhrGet({\r\n		url: api.xsite(url),\r\n		preventCache: true,\r\n		load: dojo.hitch(this, function(data, ioArgs) {\r\n			var items = data.getElementsByTagName("item");\r\n			var text = "";\r\n			dojo.forEach(items, function(item) {\r\n				text += "<div style=''border: 1px solid black;''>"+item.textContent+"</div>";\r\n			});\r\n			this.right.setContent(text);\r\n		}),\r\n		handleAs: "xml"\r\n	});\r\n}', '1.0', 'Alpha', 'Internet');

--END APPS------------------


--
-- Table structure for table `#__users`
-- 
DROP TABLE IF EXISTS `#__users`;
CREATE TABLE `#__users` (
  `username` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `password` mediumtext NOT NULL,
  `logged` tinyint(1) NOT NULL default '0',
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `level` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;


-- Registry
DROP TABLE IF EXISTS `#__registry`;
CREATE TABLE `#__registry` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `appid` int(20) NOT NULL,
  `name` mediumtext NOT NULL,
  `value` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

-- Config
DROP TABLE IF EXISTS `#__config`;
CREATE TABLE `#__config` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `value` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

--crosstalk
DROP TABLE IF EXISTS `#__crosstalk`;
CREATE TABLE `#__crosstalk` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `message` mediumtext NOT NULL,
  `sender` mediumtext NOT NULL,
  `appID` int(11) NOT NULL,
  `instance` int(11) NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;
