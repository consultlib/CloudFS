--    Psych Desktop
--    Copyright (C) 2006 Psychiccyberfreak
 --
  --  This program is free software; you can redistribute it and/or modify
  --  it under the terms of the GNU General Public License as published by
  --  the Free Software Foundation; either version 2 of the License, or
  --  (at your option) any later version.
  --
  --  This program is distributed in the hope that it will be useful,
  --  but WITHOUT ANY WARRANTY; without even the implied warranty of
  --  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  --  GNU General Public License for more details.

  --  You should have received a copy of the GNU General Public License along
  --  with this program; if not, write to the Free Software Foundation, Inc.,
  --  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  --
-- NOTE: DON'T ACTUALLY RUN THIS! THE INSTALLER (install.php) will install for you!
-- Changed the charset to utf8, it's more standard...
-- Also fixed that nasty "there can be only one auto column and it must be defined as a key" bug.
-- Now the user can specify a prefix! Woo Hoo!!!
-- --------------------------------------------------------

--Do not remove this; it is for the script that automatically updates the
--demo on the website

--START APPS------------------

-- 
-- Table structure for table `#__apps`
--
DROP TABLE IF EXISTS `#__apps`;
CREATE TABLE `#__apps` (
  `ID` int(20) NOT NULL auto_increment,
  `name` mediumtext NOT NULL,
  `author` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `code` longtext NOT NULL,
  `version` text NOT NULL,
  `maturity` mediumtext NOT NULL,
  `category` mediumtext NOT NULL,
  PRIMARY KEY  (`ID`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

-- 
-- Dumping data for table `#__apps`
-- 

REPLACE INTO `#__apps` (`ID`, `name`, `author`, `email`, `code`, `version`, `maturity`, `category`) VALUES 
(1, 'Calculator', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'this.kill = function() {\r\n	this.window.destroy();\r\n}\r\nthis.init = function(args)\r\n{\r\nwinHTML  = \\''<form style=\\"height: 12%; overflow: hidden;\\" onSubmit=\\"return desktop.app.instances[\\''+this.instance+\\''].evaluate();\\"><input type=\\"text\\" id=\\"results\\''+this.instance+\\''\\" style=\\"text-align: right; width: 100%;\\" /></form>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''(\\\\\\''\\">(</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\'')\\\\\\''\\">)</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%; visibility: hidden;\\"> </button>\\''\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value = \\\\\\''\\\\\\''\\">C</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''7\\\\\\''\\">7</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''8\\\\\\''\\">8</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''9\\\\\\''\\">9</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''/\\\\\\''\\">/</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''4\\\\\\''\\">4</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''5\\\\\\''\\">5</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''6\\\\\\''\\">6</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''*\\\\\\''\\">*</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''1\\\\\\''\\">1</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''2\\\\\\''\\">2</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''3\\\\\\''\\">3</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''-\\\\\\''\\">-</button>\\'';\r\n//------------------\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''0\\\\\\''\\">0</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''.\\\\\\''\\">.</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"desktop.app.instances[\\''+this.instance+\\''].evaluate()\\">=</button>\\'';\r\nwinHTML += \\''<button style=\\"width: 25%; height: 16%;\\" onClick=\\"document.getElementById(\\\\\\''results\\''+this.instance+\\''\\\\\\'').value += \\\\\\''+\\\\\\''\\">+</button>\\'';\r\n//-------------------\r\nthis.window = new api.window();\r\nthis.window.title=\\"Calculator\\";\r\nthis.window.write(winHTML);\r\nthis.window.width=\\"200px\\";\r\nthis.window.height=\\"235px\\";\r\nthis.window.show();\r\n}\r\nthis.evaluate = function()\r\n{\r\n     if(document.getElementById(\\"results\\"+this.instance).value != \\"\\")\r\n     {\r\n          try{ eval(\\"document.getElementById(\\''results\\''+this.instance).value = \\"+document.getElementById(\\"results\\"+this.instance).value); }\r\n          catch(e) { document.getElementById(\\''results\\''+this.instance).value = \\"ERROR\\"; }\r\n     }\r\n     return false;\r\n}', '1.0', 'Alpha', 'Accessories'),
(2, 'Web Browser', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'this.kill = function() {\r\n	this.window.destroy();\r\n}\r\nthis.init = function(args)\r\n{\r\nthis.window = new api.window();\r\nthis.window.write(\\''<form name=\\"submitbox\\" action=\\"#\\" onSubmit=\\"return desktop.app.instances[\\''+this.instance+\\''].go()\\" >\\'');\r\nthis.window.write(\\''<form name=\\"submitbox\\" action=\\"#\\" onSubmit=\\"return desktop.app.instances[\\''+this.instance+\\''].go()\\" >\\'');\r\nthis.window.write(\\''<input type=\\"text\\" id=\\"browserUrlBox\\''+this.instance+\\''\\" value=\\"http://www.google.com/\\" style=\\"width: 94%;\\" />\\'');\r\nthis.window.write(\\''<input type=\\"button\\" value=\\"Go\\" onClick=\\"desktop.app.instances[\\''+this.instance+\\''].go()\\" style=\\"width: 6%;\\"><br />\\'');\r\nthis.window.write(\\''<iframe style=\\"width: 99%; height: 90%; background-color: #FFFFFF;\\" src=\\"http://www.google.com\\" id=\\"browserIframe\\''+this.instance+\\''\\" /></form>\\'');\r\nthis.window.title=\\"Web Browser\\";\r\nthis.window.height=\\"420px\\";\r\nthis.window.width=\\"500px\\";\r\nthis.window.show();\r\n}\r\n\r\nthis.go = function()\r\n{\r\nurlbox = document.getElementById(\\"browserUrlBox\\"+this.instance);\r\nURL = urlbox.value;\r\nif(URL.charAt(4) == \\":\\" && URL.charAt(5) == \\"/\\" && URL.charAt(6) == \\"/\\")\r\n{\r\n}\r\nelse\r\n{\r\n//but wait, what if it\\''s an FTP site?\r\nif(URL.charAt(3) == \\":\\" && URL.charAt(4) == \\"/\\" && URL.charAt(5) == \\"/\\")\r\n{\r\n}\r\nelse\r\n{\r\n//if it starts with an \\"ftp.\\", it\\''s most likely an FTP site.\r\nif((URL.charAt(0) == \\"F\\" || URL.charAt(0) == \\"f\\") && (URL.charAt(1) == \\"T\\" || URL.charAt(1) == \\"t\\") && (URL.charAt(2) == \\"P\\" || URL.charAt(2) == \\"p\\") && URL.charAt(3) == \\".\\")\r\n{\r\nURL = \\"ftp://\\"+URL;\r\n}\r\nelse\r\n{\r\n//ok, it\\''s probably a plain old HTTP site...\r\nURL = \\"http://\\"+URL;\r\n}\r\n}\r\n}\r\nIframe = document.getElementById(\\"browserIframe\\"+this.instance);\r\nIframe.src = URL;\r\nurlbox.value = URL;\r\nreturn false;\r\n}', '1.0', 'Alpha', 'Internet'),
(3, 'Control Panel', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'dojo.require(\\"dijit.layout.ContentPane\\");\r\ndojo.require(\\"dijit.layout.LayoutContainer\\");\r\ndojo.require(\\"dijit.layout.TabContainer\\");\r\ndojo.require(\\"dijit.form.Form\\");\r\ndojo.require(\\"dijit.form.CheckBox\\");\r\ndojo.require(\\"dijit.Toolbar\\");\r\nthis.kill = function() {\r\nthis.window.destroy();\r\nthis.window2.destroy();\r\n}\r\nthis.init = function(args) {\r\n	this.window2 = new api.window();\r\n	this.window2.write(\\"Obtaining account details...\\");\r\n	this.window2.height=\\"100px\\";\r\n	this.window2.width=\\"100px\\";\r\n	this.window2.title=\\"Please wait...\\";\r\n	this.window2.show();\r\n	api.user.getUserName(dojo.hitch(this, this.processUserName));\r\n	api.user.getUserID(dojo.hitch(this, this.processUserID));\r\n	api.user.getUserLevel(dojo.hitch(this, this.processUserLevel));\r\n	this.await();\r\n}\r\nthis.processUserName = function(username) {\r\n	this.username = username;\r\n	this.usernameb = true;\r\n}\r\nthis.processUserID = function(userid) {\r\n	this.userid = userid;\r\n	this.useridb = true;\r\n}\r\nthis.processUserLevel = function(userlevel) {\r\n	this.userlevel = userlevel;\r\n	this.userlevelb = true;\r\n}\r\nthis.await = function() {\r\n	if(this.usernameb != true & this.useridb != true & this.userlevelb != true) {\r\n	setTimeout(dojo.hitch(this, this.await), 1000);\r\n}\r\nelse {\r\n	this.window2.destroy();\r\n	this.open();\r\n}\r\n}\r\nthis.open = function(args)\r\n{\r\n	this.window = new api.window();\r\n	this.window.title=\\"Control Panel\\";\r\n	this.window.width=\\"500px\\";\r\n	this.window.height=\\"300px\\";\r\n	this.window.setBodyWidget(\\"LayoutContainer\\", {});\r\n	var toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n	toolbar.addChild(new dijit.form.Button({label: \\"Save to server\\", onClick: dojo.hitch(this, this.processSave), iconClass: \\"icon-16-actions-document-save\\"}));\r\n	this.window.addChild(toolbar);\r\n	var tabs = new dijit.layout.TabContainer({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\n		var wallpaper = new dijit.layout.ContentPane({title: \\"Wallpaper\\"}, document.createElement(\\"div\\"));\r\n		var winHTML = \\"<fieldset><legend>Color</legend>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"red\\\\\\";\\'' style=\\''background: red; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"orange\\\\\\";\\'' style=\\''background: orange; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"yellow\\\\\\";\\'' style=\\''background: yellow; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"lime\\\\\\";\\'' style=\\''background: lime; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"green\\\\\\";\\'' style=\\''background: green; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"teal\\\\\\";\\'' style=\\''background: teal; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"blue\\\\\\";\\'' style=\\''background: blue; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"purple\\\\\\";\\'' style=\\''background: purple; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"black\\\\\\";\\'' style=\\''background: black; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<a onclick=\\''document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value = \\\\\\"white\\\\\\";\\'' style=\\''background: white; float:left; width:20px; height:20px; margin:4px; cursor:pointer; outline:none;\\''></a>\\";\r\n		winHTML += \\"<br /><br /><b>Or HTML color:</b><input type=\\''text\\'' id=\\''ctrlpanel_color\\'' maxlength=\\''7\\'' size=\\''7\\'' value=\\''\\"+ desktop.config.wallpaper.color +\\"\\'' />\\";\r\n		winHTML += \\"</fieldset>\\";\r\n		winHTML += \\"<fieldset><legend>Background Image</legend>\\";\r\n		winHTML += \\"<b>Default: </b><input checked type=\\''radio\\'' name=\\''ctrlpanel_image\\'' onFocus=\\''document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value = \\\\\\"./wallpaper/default.gif\\\\\\";\\'' />\\";\r\n		winHTML += \\"<b>None: </b><input type=\\''radio\\'' name=\\''ctrlpanel_image\\'' onFocus=\\''document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value = \\\\\\"\\\\\\";\\'' />\\";\r\n		winHTML += \\"<b>Other: </b><input type=\\''radio\\'' name=\\''ctrlpanel_image\\'' id=\\''ctrlpanel_image_other\\'' onFocus=\\''document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value = \\\\\\"http://\\\\\\";\\'' />\\";\r\n		winHTML += \\"<br /><b>Image URL: </b><input type=\\''text\\'' name=\\''ctrlpanel_text\\'' value=\\''\\"+ desktop.config.wallpaper.image +\\"\\'' id=\\''ctrlpanel_text\\'' />\\";\r\n		winHTML += \\"</fieldset>\\"\r\n		wallpaper.setContent(winHTML);\r\n		tabs.addChild(wallpaper);\r\n\r\n		var performance = new dijit.layout.ContentPane({title: \\"Performance\\"}, document.createElement(\\"div\\"));\r\n		winHTML = \\"Effects:<br>On: <input checked type=\\''checkbox\\'' value=\\''true\\'' name=\\''bbbbb\\'' id=\\''bbbbb\\''>\\"; \r\n		//winHTML += \\"<br /><input type=\\''button\\'' onClick=\\''desktop.config.wallpaper.image = document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value; desktop.config.fx = document.getElementById(\\\\\\"bbbbb\\\\\\").value; desktop.wallpaper.set(document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value; desktop.wallpaper.setColor(document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value); desktop.config.wallpaper.color = document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value;\\'' value=\\''Save\\'' />\\";\r\n		performance.setContent(winHTML);\r\n		tabs.addChild(performance);\r\n\r\n		var account = new dijit.layout.ContentPane({title: \\"Account Details\\"}, document.createElement(\\"div\\"));\r\n		winHTML = \\"Account details: <br><b>UserID:</b> \\"+this.userid+\\"<br><b>Username:</b> \\"+this.username+\\"<br><b>Password:</b> (hidden)<br><b>Userlevel:</b> \\"+this.userlevel; \r\n		//winHTML += \\"<br /><input type=\\''button\\'' onClick=\\''desktop.config.wallpaper.image = document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value; desktop.config.fx = document.getElementById(\\\\\\"bbbbb\\\\\\").value; desktop.wallpaper.set(document.getElementById(\\\\\\"ctrlpanel_text\\\\\\").value; desktop.wallpaper.setColor(document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value); desktop.config.wallpaper.color = document.getElementById(\\\\\\"ctrlpanel_color\\\\\\").value;\\'' value=\\''Save\\'' />\\";\r\n		account.setContent(winHTML);\r\n		tabs.addChild(account);\r\n\r\n	this.window.addChild(tabs);\r\n	this.window.show();\r\n	this.window.startup();\r\n	//document.getElementById(\\"ctrlpanel_text\\").value = desktop.config.wallpaper.image;\r\n	//document.getElementById(\\"ctrlpanel_color\\").value = desktop.config.wallpaper.color;\r\n}\r\n\r\nthis.processSave = function() {\r\n	var image=document.getElementById(\\"ctrlpanel_text\\").value;\r\n	var color=document.getElementById(\\"ctrlpanel_color\\").value;\r\n	var fx=document.getElementById(\\"bbbbb\\").value;\r\n	desktop.wallpaper.set(image);\r\n	desktop.wallpaper.setColor(color);\r\n	desktop.config.wallpaper.image = image;\r\n	desktop.config.wallpaper.color = color;\r\n	if(fx == \\"true\\") {\r\n		fx = true;\r\n	}\r\n	else {\r\n		fx = false;\r\n	}\r\n	desktop.config.fx = fx;\r\n	desktop.config.save();\r\n	api.ui.alert(\\"Changes applied sucessfully.\\");\r\n}', '1.0', 'Stable', 'System'),
(4, 'Notepad', 'Psychiccyberfreak', 'bj@psychdesigns.net', 'dojo.require(\\"dijit.Toolbar\\");\r\ndojo.require(\\"dijit.layout.ContentPane\\");\r\ndojo.require(\\"dijit.layout.LayoutContainer\\");\r\nthis.kill = function() {\r\n	this.window2.destroy();\r\n	this.window.destroy();\r\n}\r\nthis.init=function(args)\r\n{\r\nthis.window2 = new api.window();\r\nthis.window2.write(\\"Please wait whilst we get data from the registry...\\");\r\nthis.window2.height=\\"100px\\";\r\nthis.window2.width=\\"100px\\";\r\nthis.window2.title=\\"Please wait...\\";\r\nthis.window2.show();\r\napi.registry.get(this.id, \\"notepad\\", dojo.hitch(this, this.notepad));\r\n}\r\n\r\nthis.notepad=function(text) {\r\nthis.window2.destroy();\r\nthis.window = new api.window();\r\nthis.window.setBodyWidget(\\"LayoutContainer\\", {});\r\nvar toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\ntoolbar.addChild(new dijit.form.Button({label: \\"Save to server\\", onClick: dojo.hitch(this, this.processSave), iconClass: \\"icon-16-actions-document-save\\"}));\r\ntoolbar.addChild(new dijit.form.Button({label: \\"Exit\\", onClick: dojo.hitch(this, this.exit), iconClass: \\"icon-16-actions-system-log-out\\"}));\r\nthis.window.addChild(toolbar);\r\nvar box = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\nthis.other = new dijit.layout.ContentPane({layoutAlign: \\"bottom\\", style: \\"height: 10%\\"}, document.createElement(\\"div\\"));\r\nhtml = \\"<div padding=10>\\";\r\nhtml += \\"<textarea id=\\''notepad\\"+this.instance+\\"\\'' style=\\''width: 100%; height: 90%;\\''>\\";\r\nhtml += text;\r\nhtml += \\"</textarea>\\";\r\n//this.window.write(\\"<input onclick=\\\\\\"note = document.getElementById(\\''notepad\\"+this.instance+\\"\\'').value.replace(/\\\\\\\\n/gi, \\'' \\'' ); api.registry.save(\\"+this.id+\\", \\''notepad\\'', note);\\\\\\" value=\\''Save\\'' type=\\''button\\'' />\\");\r\nbox.setContent(html);\r\nthis.other.setContent(\\"Ready\\");\r\nthis.window.addChild(box);\r\nthis.window.addChild(this.other);\r\nthis.window.title=\\"Notepad\\";\r\nthis.window.width=\\"300px\\";\r\nthis.window.height=\\"305px\\";\r\nthis.window.show();\r\nthis.window.startup();\r\n}\r\n\r\nthis.processSave=function()\r\n{\r\n	\r\nnote = dojo.byId(\\''notepad\\''+this.instance).value.replace(/\\\\\\\\n/gi, \\'' \\'' );\r\napi.registry.save(this.id, \\''notepad\\'', note);\r\nthis.other.setContent(\\"save sucessful.\\");\r\nthis.window.startup();\r\n\r\n}\r\n\r\nthis.exit=function(){\r\nthis.other.setContent(\\"goodbye!\\");\r\n	this.window.destroy();\r\n}\r\n\r\n', '1.0', 'Beta', 'Accessories'),
(5, 'Katana IDE', 'Psychiccyberfreak', 'bj@psychdesigns.net', '/*\r\nKatana IDE\r\nby: Psychiccyberfreak\r\n\r\nTODO:\r\n*restrict save/open backend to admins and developers\r\n*get function parser working\r\n*custom code snipplets (use database API)\r\n*layoutContainer resize issue (nobody has been able to answer this in the dojo forums...)\r\n\r\nThoughts after writing an app:\r\n*all of the system functions and variables should be in a class. It will be a pain in the ass to do, but otherwise it would be easy to screw up the namespace in an app.\r\napps[blah] should be a cache of the apps, instances[blah] should hold each instance.\r\n*/\r\nthis.init = function(args)\r\n{\r\nthis.metadata = new Object();\r\nthis.functions = new Array();\r\nthis.window = new api.window();\r\nthis.window.title = \\"Katana IDE\\";\r\nthis.window.write(\\"<div id=\\''ide\\"+this.instance+\\"\\'' style=\\''height: 100%; width: 100%; margin: 0px;\\''></div>\\");\r\nthis.window.show();\r\n\r\nthis.ide = dojo.widget.createWidget(\\"LayoutContainer\\", {style: \\"width: 100%; height: 100%;\\", layoutAlign: \\"client\\"}, dojo.byId(\\"ide\\"+this.instance));\r\n     this.toolbarcontainer = dojo.widget.createWidget(\\"ContentPane\\",{layoutAlign: \\"top\\", style: \\"width: 100%;\\"});\r\n     this.toolbar = dojo.widget.createWidget(\\"MenuBar2\\", {layout: \\"top\\"});\r\n\r\n          this.toolbar_item = dojo.widget.createWidget(\\"PopupMenu2\\", {id: \\"ide_file\\"+this.instance});\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"New\\", onClick: this.hitch(this.file_new)}));\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Open\\", onClick: this.hitch(this.loadDialog)}));\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Save\\", onClick: this.hitch(this.save)}));\r\n          this.toolbar.addChild(dojo.widget.createWidget(\\"MenuBarItem2\\", {caption: \\"File\\", submenuId: \\"ide_file\\"+this.instance}));\r\n\r\n          this.toolbar_item = dojo.widget.createWidget(\\"PopupMenu2\\", {id: \\"ide_insert\\"+this.instance});\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Ajax request\\", onClick: this.hitch(this.insert_ajax)}));\r\n          this.toolbar.addChild(dojo.widget.createWidget(\\"MenuBarItem2\\", {caption: \\"Insert\\", submenuId: \\"ide_insert\\"+this.instance}));\r\n\r\n          this.toolbar_item = dojo.widget.createWidget(\\"PopupMenu2\\", {id: \\"ide_functions\\"+this.instance});\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Add new\\", onClick: this.hitch(this.addafunc)}));\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Edit Current\\", onClick: this.hitch(this.functionDialog)}));\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Delete Current\\", onClick: this.hitch(this.deleteFunc)}));\r\n          this.toolbar.addChild(dojo.widget.createWidget(\\"MenuBarItem2\\", {caption: \\"Functions\\", submenuId: \\"ide_functions\\"+this.instance}));\r\n\r\n          this.toolbar_item = dojo.widget.createWidget(\\"PopupMenu2\\", {id: \\"ide_app\\"+this.instance});\r\n               this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Flush app cache\\", onClick: function(){apps = new Array();}}));\r\n          this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Execute App\\", onClick: this.hitch(this.execute)}));\r\n          this.toolbar_item.addChild(dojo.widget.createWidget(\\"MenuItem2\\", {caption: \\"Edit Metadata\\", onClick: this.hitch(this.showMetadataDialog) }));\r\n\r\n          this.toolbar.addChild(dojo.widget.createWidget(\\"MenuBarItem2\\", {caption: \\"App\\", submenuId: \\"ide_app\\"+this.instance}));\r\n\r\n     this.toolbarcontainer.addChild(this.toolbar);\r\nthis.ide.addChild(this.toolbarcontainer);\r\n     this.body = dojo.widget.createWidget(\\"SplitContainer\\",{layoutAlign: \\"client\\", activeSizing: true, persist: false, orientation: \\"horizontal\\", style: \\"width: 100%; height: 100%;\\"});\r\n          this.functionlist = dojo.widget.createWidget(\\"ContentPane\\",{sizeShare:3});\r\n          this.functionlist.domNode.style.overflow=\\"auto\\";\r\n          //this.functionlist.setContent(\\''<div class=\\"dojo-Tree\\"></div>\\'');\r\n          this.functiontree = dojo.widget.createWidget(\\"Tree\\",{});\r\n          this.functionlist.addChild(this.functiontree);\r\n          this.editorarea = dojo.widget.createWidget(\\"ContentPane\\",{sizeShare: 7});\r\n          this.editorarea.domNode.style.overflow=\\"hidden\\";\r\n          this.editorarea.setContent(\\"<textarea id=\\''ide_textarea\\"+this.instance+\\"\\'' style=\\''width: 100%; height: 100%;\\''></textarea>\\");\r\n     this.body.addChild(this.functionlist);\r\n     this.body.addChild(this.editorarea);\r\nthis.ide.addChild(this.body);\r\n\r\ndocument.getElementById(\\"ide_textarea\\"+this.instance).onkeydown = this.hitch(this.HandleKeyDown);\r\n\r\n\r\nthis.file_new();\r\n}\r\n\r\nthis.insert_ajax = function()\r\n{\r\n     text  = \\"\\\\ndojo.io.bind({\\\\n\\";\r\n     text += \\"\\\\turl: ,\\\\n\\";\r\n     text += \\"\\\\tload: ,\\\\n\\";\r\n     text += \\"\\\\terror: ,\\\\n\\";\r\n     text += \\"\\\\tmimetype: \\\\\\"text/plain\\\\\\"\\\\n\\";\r\n     text += \\"});\\\\n\\";\r\n     this.insert(text);\r\n}\r\n\r\nthis.HandleKeyDown = function(e)\r\n{\r\n	key = null;\r\n	if(window.event) key = event.keyCode;\r\n	else if(e.which) key = e.which;\r\n	if(key != null && key == 9)\r\n	{\r\n		this.insert(\\"	\\");\r\n		return false;\r\n	}\r\n}\r\n\r\nthis.insert = function(myValue)\r\n{\r\n     myField=document.getElementById(\\"ide_textarea\\"+this.instance);\r\n     //IE support\r\n     if (document.selection) {\r\n          myField.focus();\r\n          sel = document.selection.createRange();\r\n          sel.text = myValue;\r\n     }\r\n     //MOZILLA/NETSCAPE support\r\n     else if (myField.selectionStart || myField.selectionStart == \\''0\\'') {\r\n          startPos = myField.selectionStart;\r\n          endPos = myField.selectionEnd;\r\n          myField.value = myField.value.substring(0, startPos)\r\n          + myValue\r\n          + myField.value.substring(endPos, myField.value.length);\r\n          myField.selectionStart = endPos+myValue.length;\r\n          myField.selectionEnd = endPos+myValue.length;\r\n     } else {\r\n          myField.value += myValue;\r\n     }\r\n}\r\n\r\nthis.addFunc = function(name, code, args)\r\n{\r\n     //add a func to the ide\\''s GUI\r\n     if(name == \\"init\\")\r\n     {\r\n          this.functions[0] = new Object();\r\n          this.functions[0].name = name;\r\n          this.functions[0].code = code;\r\n          this.functions[0].args = args;\r\n          this.functions[0].treenode = dojo.widget.createWidget(\\"TreeNode\\",{title: \\"Init(\\"+args+\\")\\"});\r\n          eval(\\"this.functions[0].treenode.onTitleClick = function() { desktop.app.instances[\\"+this.instance+\\"].switchToFunc(0); }\\");\r\n          this.functiontree.addChild(this.functions[0].treenode);\r\n          this.currentFunc = 0;\r\n          this.switchToFunc(0);\r\n     }\r\n     else\r\n     {\r\n          this.functions[this.functions.length] = new Object();\r\n          this.functions[this.functions.length-1].name = name;\r\n          this.functions[this.functions.length-1].args = args;\r\n          this.functions[this.functions.length-1].code = code;\r\n          this.functions[this.functions.length-1].treenode = dojo.widget.createWidget(\\"TreeNode\\",{title: name+\\"(\\"+args+\\")\\"});\r\n          eval(\\"this.functions[\\"+(this.functions.length-1)+\\"].treenode.onTitleClick = function() { desktop.app.instances[\\"+this.instance+\\"].switchToFunc(\\"+(this.functions.length-1)+\\"); }\\");\r\n          this.functiontree.addChild(this.functions[this.functions.length-1].treenode);\r\n          //this.switchToFunc(this.functions.length-1);\r\n     }\r\n}\r\n\r\nthis.deleteFunc = function()\r\n{\r\n     function_id = this.currentFunc;\r\n     if(function_id != 0)\r\n     {\r\n          document.getElementById(\\"ide_textarea\\"+this.instance).value = this.functions[0].code;\r\n          this.currentFunc = 0;\r\n          //this.functiontree.removeChild(this.functions[function_id].treenode);\r\n          for(count=function_id;count<=this.functions.length-2;count++)\r\n          {\r\n               //alert(\\"altering function list (item \\"+count+\\")\\");\r\n               alert(\\"name: \\"+this.functions[count].name+\\" -> \\"+this.functions[count+1].name);\r\n               this.functions[count].name = this.functions[count+1].name;\r\n               this.functions[count].code = this.functions[count+1].code;\r\n               this.functions[count].args = this.functions[count+1].args;\r\n               this.functions[count].treenode = this.functions[count+1].treenode;\r\n          }\r\n          this.functions[this.functions.length-1].name = undefined;\r\n          this.functions[this.functions.length-1].code = undefined;\r\n          this.functions[this.functions.length-1].args = undefined;\r\n          this.functions[this.functions.length-1].treenode = undefined;\r\n          this.functions[this.functions.length-1] = undefined;\r\n          this.functionlist.removeChild(this.functiontree);\r\n          this.functiontree = dojo.widget.createWidget(\\"Tree\\",{});\r\n          this.functionlist.addChild(this.functiontree);\r\n          for(count=0;count<=this.functions.length-1;count++)\r\n          {\r\n               this.functions[count].treenode = dojo.widget.createWidget(\\"TreeNode\\",{title: this.functions[count].name+\\"(\\"+this.functions[count].args+\\")\\"});\r\n               eval(\\"this.functions[\\"+count+\\"].treenode.onTitleClick = function() { desktop.app.instances[\\"+this.instances+\\"].switchToFunc(\\"+count+\\"); }\\");\r\n               this.functiontree.addChild(this.functions[count].treenode);\r\n          }\r\n     }\r\n}\r\n\r\nthis.switchToFunc = function(funcnumber)\r\n{\r\nthis.functions[this.currentFunc].code = document.getElementById(\\"ide_textarea\\"+this.instance).value; \r\ndocument.getElementById(\\"ide_textarea\\"+this.instance).value = this.functions[funcnumber].code;\r\nthis.currentFunc = funcnumber;\r\ndocument.getElementById(\\"ide_textarea\\"+this.instance).focus();\r\n}\r\nthis.addafunc = function() { this.functionDialog(-1); }\r\nthis.file_new = function()\r\n{\r\n     this.functions = new Array();\r\n     this.currentFunc = 0;\r\n     document.getElementById(\\"ide_textarea\\"+this.instance).value = \\"\\";\r\n     this.functionlist.removeChild(this.functiontree);\r\n     this.functiontree = dojo.widget.createWidget(\\"Tree\\",{});\r\n     this.functionlist.addChild(this.functiontree);\r\n     this.addFunc(\\"init\\", \\"\\", \\"args\\");\r\n     this.metadata.title = \\"\\";\r\n     this.metadata.author = conf_user;\r\n     this.metadata.email = \\"\\";\r\n     this.metadata.version = \\"\\";\r\n     this.metadata.maturity = \\"Stable\\";\r\n     this.currentAppId = -1;\r\n}\r\n\r\nthis.compile = function()\r\n{\r\n     this.functions[this.currentFunc].code = document.getElementById(\\"ide_textarea\\"+this.instance).value; \r\n     this.compiledLibrary = \\"\\";\r\n     for(count=0;count<=this.functions.length-1;count++)\r\n     {\r\n          if(count != 0)\r\n          {\r\n               this.compiledLibrary += \\"this.\\"+this.functions[count].name+\\" = function(\\"+this.functions[count].args+\\")\\\\n{\\\\n\\";\r\n               this.compiledLibrary += this.functions[count].code;\r\n               this.compiledLibrary += \\"\\\\n}\\\\n\\\\n\\";\r\n          }\r\n     }\r\n     this.compiledCode = this.functions[0].code;\r\n}\r\n\r\nthis.execute = function()\r\n{\r\n     this.compile();\r\n     xml_seperator = desktop.app.xml_seperator;\r\n     this.emulated_data = \\"-666\\"+xml_seperator+\\" \\"+xml_seperator+\\" \\"+xml_seperator+\\" \\"+xml_seperator+this.functions[0].code+xml_seperator+this.compiledLibrary+xml_seperator+\\" \\"+xml_seperator+\\" \\"+xml_seperator+\\" \\"+xml_seperator;\r\n     desktop.app.fetchAppCallback(\\"\\", this.emulated_data, \\"\\");\r\n     desktop.app.launch(-666);\r\n}\r\n//metadata editing functions-----------------------------------------------------------------------------------------------------------\r\nthis.showMetadataDialog = function()\r\n{\r\n     this.metadataDialog = new api.window();\r\n     this.metadataDialog.title = \\"Katana IDE - Edit app metadata\\";\r\n     this.metadataDialog.height = \\"200px\\";\r\n     this.metadataDialog.width = \\"320px\\";\r\n     this.metadataDialog.write(\\"<b>Title:</b> <input type=\\''text\\'' id=\\''ide_metadata_title\\"+this.instance+\\"\\'' value=\\''\\"+this.metadata.title+\\"\\'' /><br />\\");\r\n     this.metadataDialog.write(\\"<b>Author:</b> <input type=\\''text\\'' id=\\''ide_metadata_author\\"+this.instance+\\"\\'' value=\\''\\"+this.metadata.author+\\"\\'' /><br />\\");\r\n     this.metadataDialog.write(\\"<b>Email:</b> <input type=\\''text\\'' id=\\''ide_metadata_email\\"+this.instance+\\"\\'' value=\\''\\"+this.metadata.email+\\"\\'' /><br />\\");\r\n     this.metadataDialog.write(\\"<b>Version:</b> <input type=\\''text\\'' id=\\''ide_metadata_version\\"+this.instance+\\"\\'' value=\\''\\"+this.metadata.version+\\"\\'' /><br />\\");\r\n     this.metadataDialog.write(\\"<b>Maturity:</b> <SELECT id=\\''ide_metadata_maturity\\"+this.instance+\\"\\'' selected=\\''\\"+this.metadata.maturity+\\"\\''><OPTION>Stable</OPTION><OPTION>Beta</OPTION><OPTION>Alpha</OPTION></SELECT>\\");\r\n     this.metadataDialog.write(\\" <b>Category:</b> <SELECT id=\\''ide_metadata_category\\"+this.instance+\\"\\'' selected=\\''\\"+this.metadata.category+\\"\\''><OPTION>Office</OPTION><OPTION>Internet</OPTION><OPTION selected>System</OPTION></SELECT>\\");\r\n     this.metadataDialog.write(\\"<br /><input type=\\''button\\'' value=\\''Save\\'' id=\\''ide_metaData_saveButton\\"+this.instance+\\"\\'' onClick=\\''desktop.app.instances[\\"+this.instance+\\"].saveMetadata();\\'' />\\");\r\n     this.metadataDialog.show();\r\n}\r\nthis.saveMetadata = function()\r\n{\r\n     this.metadata.title = document.getElementById(\\"ide_metadata_title\\"+this.instance).value;\r\n     this.metadata.author = document.getElementById(\\"ide_metadata_author\\"+this.instance).value;\r\n     this.metadata.email = document.getElementById(\\"ide_metadata_email\\"+this.instance).value;\r\n     this.metadata.version = document.getElementById(\\"ide_metadata_version\\"+this.instance).value;\r\n     this.metadata.maturity = document.getElementById(\\"ide_metadata_maturity\\"+this.instance).value;\r\n     this.metadata.category = document.getElementById(\\"ide_metadata_category\\"+this.instance).value;\r\n     this.metadataDialog.destroy();\r\n}\r\n//Add function dialog------------------------------------------------------------------------------------------------------------------\r\nthis.functionDialog = function(funcNumber)\r\n{\r\n     if(funcNumber == undefined){funcNumber = this.currentFunc; }\r\n     if(funcNumber != 0)\r\n     {\r\n          this.addFuncDialog = new api.window();\r\n          this.addFuncDialog.title = \\"Katana IDE - Function information\\";\r\n          this.addFuncDialog.height = \\"130px\\";\r\n          this.addFuncDialog.width = \\"270px\\";\r\n          if(funcNumber == -1)\r\n          {\r\n               this.addFuncDialog.write(\\"<b>Name:</b> <input type=\\''text\\'' id=\\''ide_funcDialog_name\\"+this.instance+\\"\\'' /><br />\\");\r\n               this.addFuncDialog.write(\\"<b>Arguments:</b> <input type=\\''text\\'' id=\\''ide_funcDialog_args\\"+this.instance+\\"\\'' /><br />\\");\r\n               this.addFuncDialog.write(\\"<input type=\\''button\\'' value=\\''Save\\'' id=\\''ide_funcDialog_saveButton\\"+this.instance+\\"\\'' onClick=\\''desktop.app.instances[\\"+this.instance+\\"].createFunction();\\'' />\\");\r\n               this.addFuncDialog.show();\r\n          }\r\n          else\r\n          {\r\n               funcNumber = this.currentFunc;\r\n               //populate form with function info (this.functions[funcNumber].name, this.functions[funcNumber].args),\r\n               this.addFuncDialog.write(\\"<b>Name:</b> <input type=\\''text\\'' id=\\''ide_funcDialog_name\\"+this.instance+\\"\\'' value=\\''\\"+this.functions[funcNumber].name+\\"\\'' /><br />\\");\r\n               this.addFuncDialog.write(\\"<b>Arguments:</b> <input type=\\''text\\'' id=\\''ide_funcDialog_args\\"+this.instance+\\"\\'' value=\\''\\"+this.functions[funcNumber].args+\\"\\'' /><br />\\");\r\n               this.addFuncDialog.write(\\"<input type=\\''button\\'' value=\\''Save\\'' id=\\''ide_funcDialog_saveButton\\"+this.instance+\\"\\'' onClick=\\''desktop.app.instances[\\"+this.instance+\\"].editFunction();\\'' />\\");\r\n               this.addFuncDialog.write(\\"<input type=\\''hidden\\'' id=\\''ide_funcDialog_funcNumber\\"+this.instance+\\"\\'' value=\\''\\"+funcNumber+\\"\\'' />\\");\r\n               this.addFuncDialog.show();\r\n          }\r\n     }\r\n}\r\nthis.createFunction = function()\r\n{\r\n     if(document.getElementById(\\"ide_funcDialog_name\\"+this.instance).value != \\"\\")\r\n     {\r\n          name = document.getElementById(\\"ide_funcDialog_name\\"+this.instance).value;\r\n          args = document.getElementById(\\"ide_funcDialog_args\\"+this.instance).value;\r\n          this.addFunc(name, \\"\\", args);\r\n          this.addFuncDialog.destroy();\r\n     }\r\n}\r\nthis.editFunction = function()\r\n{\r\n     funcNumber = parseInt(document.getElementById(\\"ide_funcDialog_funcNumber\\"+this.instance).value);\r\n     if(document.getElementById(\\"ide_funcDialog_name\\"+this.instance).value != \\"\\")\r\n     {\r\n          this.functions[funcNumber].name = document.getElementById(\\"ide_funcDialog_name\\"+this.instance).value;\r\n          this.functions[funcNumber].args = document.getElementById(\\"ide_funcDialog_args\\"+this.instance).value;\r\n          //update tree\r\n          this.functionlist.removeChild(this.functiontree);\r\n          this.functiontree = dojo.widget.createWidget(\\"Tree\\",{});\r\n          this.functionlist.addChild(this.functiontree);\r\n          for(count=0;count<=this.functions.length-1;count++)\r\n          {\r\n               this.functions[count].treenode = dojo.widget.createWidget(\\"TreeNode\\",{title: this.functions[count].name+\\"(\\"+this.functions[count].args+\\")\\"});\r\n               eval(\\"this.functions[\\"+count+\\"].treenode.onTitleClick = function() { desktop.app.instances[\\"+this.instance+\\"].switchToFunc(\\"+count+\\"); }\\");\r\n               this.functiontree.addChild(this.functions[count].treenode);\r\n          }\r\n          this.addFuncDialog.destroy();\r\n     }\r\n}\r\n//saving functions---------------------------------------------------------------------------------------------------------------------\r\nthis.save = function()\r\n{\r\n     if(this.currentAppId != undefined &&\r\n        this.metadata.title != undefined &&\r\n        this.metadata.author != undefined &&\r\n        this.metadata.email != undefined &&\r\n        this.metadata.version != undefined &&\r\n        this.metadata.maturity != undefined &&\r\n        this.metadata.category != undefined &&\r\n        this.compiledCode != undefined)\r\n     {\r\n          ide_headers = new Object();\r\n          this.compile();\r\n          var url = \\"../backend/ide.php\\";\r\n          dojo.io.bind({\r\n               url: url,\r\n               method: \\"POST\\",\r\n               content : {\r\n                    appid: this.currentAppId,\r\n                    name: this.metadata.title,\r\n                    author: this.metadata.author,\r\n                    email: this.metadata.email,\r\n                    version: this.metadata.version,\r\n                    maturity: this.metadata.maturity,\r\n                    category: this.metadata.category,\r\n                    library: this.compiledLibrary,\r\n                    code: this.compiledCode\r\n               },\r\n               load: this.hitch(this.handleSave),\r\n               mimetype: \\"text/plain\\"\r\n          });\r\n     }\r\n     else\r\n     {\r\n          api.toaster(\\"Error: Please enter the metadata for the app\\");\r\n     }\r\n}\r\nthis.handleSave = function(type, data, evt)\r\n{\r\n     if(this.currentAppId == -1)\r\n     {\r\n          this.currentAppId = parseInt(data);\r\n     }\r\n}\r\n//loading functions--------------------------------------------------------------------------------------------------------------------\r\nthis.loadDialog = function()\r\n{\r\n     this.loadDialog = new api.window();\r\n     this.loadDialog.title = \\"Katana IDE - Open App\\";\r\n     this.loadDialog.height = \\"200px\\";\r\n     this.loadDialog.width = \\"320px\\";\r\n     this.loadDialog.write(\\"<h3>Select an App</h3>\\");\r\n     this.loadDialog.write(\\"<div style=\\''height: 65%; width: 100%; overflow: scroll;\\'' id=\\''ide_loadDialog_appList\\"+this.instance+\\"\\''></div>\\");\r\n     this.loadDialog.show();\r\n     this.getApplications();\r\n}\r\nthis.getApplications = function() {\r\nui_loadingIndicator(0);\r\nvar url = \\"../backend/app.php?action=getPrograms\\";\r\ndojo.io.bind({\r\n    url: url,\r\n    load: this.hitch(this.appListState),\r\n    error: ui_loadingIndicator(1),\r\n    mimetype: \\"text/plain\\"\r\n});\r\n}\r\n\r\nthis.appListState = function(type, data, evt){\r\napp_return = data;\r\nhtml = \\''<ul>\\'';\r\nrawcode = app_return.split(xml_seperator);\r\napp_amount = rawcode.length;\r\napp_amount--;\r\napp_amount = app_amount/3;\r\nvar x = 0;\r\nvar y = 0;\r\nvar z = 1;\r\noffice_id = new Array();\r\noffice_name = new Array();\r\noffice_count = 0;\r\nsystem_id = new Array();\r\nsystem_name = new Array();\r\nsystem_count = 0;\r\ninternet_id = new Array();\r\ninternet_name = new Array();\r\ninternet_count = 0;\r\nwhile (x <= app_amount)\r\n{\r\n	var app_id = rawcode[y];\r\n	var app_name = rawcode[z];\r\n	var app_category = rawcode[z+1];\r\n	switch(app_category)\r\n	{\r\n		case \\"Office\\":\r\n			office_id[office_id.length] = app_id;\r\n			office_name[office_name.length] = app_name;\r\n		break;\r\n		case \\"System\\":\r\n			system_id[system_id.length] = app_id;\r\n			system_name[system_name.length] = app_name;			\r\n		break;\r\n		case \\"Internet\\":\r\n			internet_id[internet_id.length] = app_id;\r\n			internet_name[internet_name.length] = app_name;\r\n			internet_count++;			\r\n		break;\r\n	}\r\n	x++;\r\n	y++; y++; y++;\r\n	z++; z++; z++;\r\n}\r\nhtml += \\''<li><img src=\\"./images/icons/applications-office.png\\" /> Office<ul>\\'';\r\nfor(count=0;count<=office_id.length-1;count++)\r\n{\r\n	html += \\''<li onClick=\\"javascript:desktop.app.instances[\\''+this.instance+\\''].openApp(\\''+office_id[count]+\\'');\\">\\''+office_name[count]+\\''</li>\\'';\r\n}\r\nhtml += \\''</ul>\\'';\r\nhtml += \\''<li><img src=\\"./images/icons/applications-internet.png\\" /> Internet<ul>\\'';\r\nfor(count=0;count<=internet_id.length-1;count++)\r\n{\r\n	html += \\''<li onClick=\\"javascript:desktop.app.instances[\\''+this.instance+\\''].openApp(\\''+internet_id[count]+\\'');\\">\\''+internet_name[count]+\\''</li>\\'';\r\n}\r\nhtml += \\''</ul>\\'';\r\nhtml += \\''<li><img src=\\"./images/icons/preferences-system.png\\" /> System<ul>\\'';\r\nfor(count=0;count<=system_id.length-1;count++)\r\n{\r\n	html += \\''<li onClick=\\"javascript:desktop.app.instances[\\''+this.instance+\\''].openApp(\\''+system_id[count]+\\'');\\">\\''+system_name[count]+\\''</li>\\'';\r\n}\r\nhtml += \\"</ul>\\";\r\ndocument.getElementById(\\"ide_loadDialog_appList\\"+this.instance).innerHTML = html;\r\nui_loadingIndicator(1);\r\n}\r\nthis.load = function(appID)\r\n{\r\n     var url = \\"../backend/app.php?id=\\"+appID;\r\n     dojo.io.bind({\r\n          url: url,\r\n          load: this.hitch(this.doLoad),\r\n          mimetype: \\"text/plain\\"\r\n     });\r\n}\r\nthis.openApp = function(appNumber)\r\n{\r\n     this.load(appNumber);\r\n     this.loadDialog.destroy();\r\n}\r\nthis.doLoad = function(type, data, evt)\r\n{/*\r\n     data = data.split(\\" \\");\r\n     init = data[4];\r\n     funcs = data[5];\r\n     funcs = funcs.split(\\"\\\\n\\");\r\n     level = 0;\r\n     buffer = \\"\\";\r\n     code = new Array();\r\n     funccount = 0;\r\n     funcnames = new Array();\r\n     args = new Array();\r\n     count = 0;\r\n     for(line in funcs)\r\n     {\r\n          line = buffer+line;\r\n          buffer = \\"\\";\r\n          if(line.indexOf(\\"{\\") != -1)\r\n          {\r\n               level++;\r\n          }\r\n          if(level == 1)\r\n          {\r\n               //TODO:START =========================================================================================\r\n               for(line2 in funcs)\r\n               {\r\n                    if(line.indexOf(\\"function\\") != -1)\r\n                    {\r\n                         //check to see if it\\''s not in quotes or parenthesis or a comment\r\n                         if(1)\r\n                         {\r\n                              start = line.indexOf(\\"(\\", line.indexOf(\\"function\\"))\r\n                              end = line.indexOf(\\")\\", line.indexOf(\\"(\\", line.indexOf(\\"function\\")))\r\n                              args = line.substring(start, end);\r\n                              if((line.indexOf(\\"function\\") > line.indexOf(\\"}\\")) && (line.indexOf(\\"}\\") != -1))\r\n                              {\r\n                                   funcdeclaration = line.substring(line.indexOf(\\"}\\")+1, line.indexOf(\\"function\\")-1);\r\n                              }\r\n                              else\r\n                              {\r\n                                   funcdeclaration = line.substring(0, line.indexOf(\\"function\\")-1);\r\n                              }\r\n                              funcdeclaration = funcdeclaration.replace(/\\\\s+/g,\\''\\'');\r\n                              funcdeclaration = funcdeclaration.replace(/=+/g,\\''\\'');\r\n                              funcname = funcdeclaration.replace(/:+/g,\\''\\''); //got func name\r\n                         }\r\n                    }\r\n               }\r\n               funcs[count-1];\r\n               funcnames[funccount] = funcname;\r\n               args[funccount] = args;\r\n               code[funccount] += line.substring(line.indexOf(\\"{\\")+1);\r\n               alert(funcname+\\", \\"+args);\r\n               //TODO:END   =========================================================================================   \r\n               }                  \r\n          }\r\n          if(line.indexOf(\\"}\\") != -1)\r\n          {\r\n               level--;\r\n          }\r\n          if(level >= 1)\r\n          {\r\n               code[funccount] += line;\r\n          }\r\n          if(level == 0 && line.indexOf(\\"}\\") != -1)\r\n          {\r\n               code[funccount] += line.substring(0, line.indexOf(\\"}\\")-1);\r\n               buffer += line.substring(line.indexOf(\\"}\\")+1);\r\n               funccount++;\r\n          }\r\n          count++;\r\n     }\r\n     if(level != 0)\r\n     {\r\n          api.toaster(\\"Error: mismatched brackets, cannot load app\\");\r\n     }\r\n     else\r\n     {\r\n          for(c=0;c<=funcnames.length;c++)\r\n          {\r\n               if(funcnames[c] != \\"hitch\\" || funcnames[c] != \\"init\\") { this.addFunc(funcnames[c], code[c], args[c]); }\r\n               if(funcnames[c] == \\"init\\") { this.addFunc(\\"init\\", code[c], \\"args\\"); }\r\n          }\r\n     }*/\r\n\r\n\r\nstart = funcs.indexOf(\\"{\\");\r\nargsStart = funcs.lastIndexOf(\\"(\\", start);\r\nargsEnd = funcs.lastIndexOf(\\")\\", start);\r\nargs = funcs.substring(argsStart+1, argsEnd-1);\r\n//look for func name\r\nbuffer = start;\r\nwhile((funcs.indexOf(\\"{\\", buffer) != -1 || funcs.indexOf(\\"}\\", buffer) != -1) || (funcs.indexOf(\\"{\\", buffer) != -1 && funcs.indexOf(\\"}\\", buffer) != -1))\r\n{\r\n     //keep getting function body...\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', '1.0', 'Stable', 'System'),
(6, 'Crosstalk Tester', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	api.crosstalk.unregisterHandler(this.handleID);\r\n	this.testing.destroy();\r\n}\r\nthis.init=function(args) {\r\n	this.testing = new api.window();\r\n	this.testing.title = \\"Please wait\\";\r\n	this.testing.write(\\"Registering handler...\\");\r\n	this.testing.show();\r\n	this.handleID = api.crosstalk.registerHandler({ instance: this.instance, callback: dojo.hitch(this, this.reply)});\r\n	this.testing.write(\\"OK! <br> Sending event...\\")\r\n	api.crosstalk.sendEvent({userid: 0, message: \\"Crosstalk finally completed! Woo hoo!\\", appid: this.id, instance: this.instance});\r\n	this.testing.write(\\"OK! <br> Everything OK! Awaiting Psych Desktop to check for events...\\")\r\n}\r\n\r\nthis.reply=function(reply) {\r\n\r\n	this.testing.write(\\"OK! <br> Message: \\"+reply);\r\n	api.ui.alert(\\"Crosstalk API test was sucessful. <br> Results are shown on the window.\\");\r\n}\r\n', '1.0', 'Alpha', 'Development'),
(7, 'Administration Panel', 'psychiccyberfreak', 'bj@psychdesigns.net', 'this.kill = function() {\r\n	this.win.destroy();\r\n}\r\nthis.init = function(args)\r\n{\r\n	dojo.require(\\"dijit.layout.SplitContainer\\");\r\n	dojo.require(\\"dijit.layout.LayoutContainer\\");\r\n	dojo.require(\\"dijit.layout.ContentPane\\");\r\n	dojo.require(\\"dijit.ProgressBar\\");\r\n	dojo.require(\\"dijit.Toolbar\\");\r\n	dojo.require(\\"dijit.form.Button\\");\r\n	//dojo.require(\\"dijit.layout.AccordionContainer\\");\r\n	dojo.require(\\"dijit.Menu\\");\r\n	//make window\r\n	this.win = new api.window({title: \\"Administration Panel\\", width: \\"500px\\", height: \\"400px\\"});\r\n	this.win.setBodyWidget(\\"SplitContainer\\", {sizerWidth: 7, orientation: \\"horizontal\\"});\r\n	var pane = new dijit.layout.ContentPane({sizeMin: 10, sizeShare: 20}, document.createElement(\\"div\\"));\r\n		var menu = new dijit.Menu({});\r\n		menu.domNode.style.width=\\"100%\\";\r\n			var item = new dijit.MenuItem({label: \\"Home\\",\r\n						       iconClass: \\"icon-22-actions-go-home\\",\r\n						       onClick: dojo.hitch(this, this.pages.home)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Users\\",\r\n						       iconClass: \\"icon-16-apps-system-users\\",\r\n						       onClick: dojo.hitch(this, this.pages.users)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Apps\\",\r\n						       iconClass: \\"icon-16-categories-applications-other\\",\r\n						       onClick: dojo.hitch(this, this.pages.apps)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Registry\\",\r\n						       iconClass: \\"icon-16-mimetypes-x-office-spreadsheet\\",\r\n						       onClick: dojo.hitch(this, this.pages.registry)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Crosstalk\\",\r\n						       iconClass: \\"icon-16-devices-network-wired\\",\r\n						       onClick: dojo.hitch(this, this.pages.crosstalk)});\r\n			menu.addChild(item);\r\n			var item = new dijit.MenuItem({label: \\"Filesystem\\",\r\n						       iconClass: \\"icon-16-devices-drive-harddisk\\",\r\n						       onClick: dojo.hitch(this, this.pages.filesystem)});\r\n			menu.addChild(item);\r\n		pane.setContent(menu.domNode);\r\n	this.win.addChild(pane);\r\n	var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement(\\"div\\"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\n		layout.addChild(this.main);\r\n		this.toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n		layout.addChild(this.toolbar);\r\n	this.win.addChild(layout);\r\n	this.win.show();\r\n	this.win.startup();\r\n	setTimeout(dojo.hitch(this, this.pages.home), 100);\r\n}\r\n\r\nthis.pages = {\r\n	home: function() {\r\n		this.toolbar.destroyDescendants();\r\n		var h = \\"Users online: <div dojoType=\\''dijit.ProgressBar\\'' progress=\\''60\\'' maximum=\\''300\\''></div>\\";\r\n		h += \\"Disk Usage: <div dojoType=\\''dijit.ProgressBar\\'' progress=\\''1\\'' maximum=\\''1\\''></div> (oh noes!)\\"\r\n		this.main.setContent(h);\r\n	},\r\n	users: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.toolbar.addChild(new dijit.form.Button({label: \\"foo!\\"}));\r\n		this.main.setContent(\\"loading...\\");\r\n		desktop.admin.users.list(dojo.hitch(this, function(data) {\r\n			var html = \\"<table style=\\''width: 100%;\\''><thead><tr style=\\''background-color: #dddddd;\\''>\\";\r\n			for(field in data[0]) {\r\n				if(field != \\"password\\") html += \\"<td>\\"+field+\\"</td>\\";\r\n			}\r\n			html += \\"</tr></thead><tbody>\\";\r\n			dojo.forEach(data, function(item) {\r\n				html += \\"<tr>\\";\r\n				for(field in item) {\r\n					if(field != \\"password\\")html += \\"<td>\\"+item[field]+\\"</td>\\";\r\n				}\r\n				html += \\"</tr>\\";\r\n			});\r\n			html += \\"</tbody></table>\\";\r\n			this.main.setContent(html);\r\n		}));\r\n	},\r\n	apps: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the apps page\\");\r\n	},\r\n	registry: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the registry page\\");\r\n	},\r\n	crosstalk: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the crosstalk page\\");\r\n	},\r\n	filesystem: function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"This is the filesystem page\\");\r\n	}\r\n}\r\n', '1.0', 'Alpha', 'System'),
(8, 'Task Manager', 'Jaymacdonald', 'jaymac407@gmail.com', 'this.kill = function() {\r\n	if(this.windowOpen) { this.win.destroy(); }\r\n	this.timer = 0;\r\n	this.status = \\"killed\\";\r\n}\r\nthis.winKill = function() {\r\n	this.windowOpen = false;\r\n	this.kill();\r\n}\r\nthis.init = function(args) {\r\n	dojo.require(\\"dijit.layout.SplitContainer\\");\r\n	dojo.require(\\"dijit.layout.LayoutContainer\\");\r\n	dojo.require(\\"dijit.layout.ContentPane\\");\r\n	dojo.require(\\"dijit.ProgressBar\\");\r\n	dojo.require(\\"dijit.Toolbar\\");\r\n	dojo.require(\\"dijit.form.Button\\");\r\n	//dojo.require(\\"dijit.layout.AccordionContainer\\");\r\n	dojo.require(\\"dijit.Menu\\");\r\n	//make window\r\n	this.win = new api.window({title: \\"Task Manager\\", width: \\"500px\\", height: \\"400px\\"});\r\n	this.win.setBodyWidget(\\"SplitContainer\\", {sizerWidth: 7, orientation: \\"horizontal\\"});\r\n	var pane = new dijit.layout.ContentPane({sizeMin: 10, sizeShare: 20}, document.createElement(\\"div\\"));\r\n		var menu = new dijit.Menu({});\r\n		menu.domNode.style.width=\\"100%\\";\r\n			var item = new dijit.MenuItem({label: \\"Refresh\\",\r\n						       iconClass: \\"icon-22-actions-go-home\\",\r\n						       onClick: dojo.hitch(this, this.home)});\r\n			menu.addChild(item);\r\n		pane.setContent(menu.domNode);\r\n	this.win.addChild(pane);\r\n	var layout = new dijit.layout.LayoutContainer({sizeMin: 60, sizeShare: 60}, document.createElement(\\"div\\"));\r\n		this.main = new dijit.layout.ContentPane({layoutAlign: \\"client\\"}, document.createElement(\\"div\\"));\r\n		layout.addChild(this.main);\r\n		this.toolbar = new dijit.Toolbar({layoutAlign: \\"top\\"});\r\n		layout.addChild(this.toolbar);\r\n	this.win.addChild(layout);\r\n	this.win.show();\r\n	this.win.startup();\r\n	this.windowOpen = true;\r\n	this.win.onDestroy = dojo.hitch(this, this.winKill);\r\n	this.status = \\"active\\";\r\n	this.main.setContent(\\"Getting processes...\\");\r\n	this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n}\r\n\r\nthis.home = function() {\r\n		this.toolbar.destroyDescendants();\r\n		this.main.setContent(\\"loading...\\");\r\n		var data = api.instances.getInstances();\r\n		var html = \\"<table style=\\''width: 100%;\\''><thead><tr style=\\''background-color: #dddddd;\\''><td>Name</td><td>Instance</td><td>AppID</td><td>Status</td><td>Actions</td></tr></thead><tbody>\\";\r\n		for(var x = 0; x<data.length; x++){\r\n		html += \\"<tr><td>\\"+data[x].name+\\"</td><td>\\"+data[x].instance+\\"</td><td>\\"+data[x].appid+\\"</td><td>\\"+data[x].status+\\"</td><td>Kill</td></tr>\\";\r\n		}\r\n		this.main.setContent(html);\r\n		//this.timer = setTimeout(dojo.hitch(this, this.home), 1000);\r\n		}\r\n', '1.0', 'Alpha', 'System');
--END APPS------------------


--
-- Table structure for table `#__users`
-- 
DROP TABLE IF EXISTS `#__users`;
CREATE TABLE `#__users` (
  `username` mediumtext NOT NULL,
  `email` mediumtext NOT NULL,
  `password` mediumtext NOT NULL,
  `logged` tinyint(1) NOT NULL default '0',
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `level` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

-- Database
DROP TABLE IF EXISTS `#__database`;
CREATE TABLE `#__database` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `appid` int(20) NOT NULL,
  `public` int(1) NOT NULL,
  `tablename` mediumtext NOT NULL,
  `data` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;


-- Registry
DROP TABLE IF EXISTS `#__registry`;
CREATE TABLE `#__registry` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `appid` int(20) NOT NULL,
  `varname` mediumtext NOT NULL,
  `value` mediumtext NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;

--crosstalk
DROP TABLE IF EXISTS `#__crosstalk`;
CREATE TABLE `#__crosstalk` (
  `ID` int(11) NOT NULL auto_increment PRIMARY KEY,
  `userid` int(11) NOT NULL,
  `message` mediumtext NOT NULL,
  `sender` mediumtext NOT NULL,
  `appID` int(11) NOT NULL,
  `instance` int(11) NOT NULL
) TYPE=MyISAM CHARACTER SET `utf8` COLLATE `utf8_general_ci` AUTO_INCREMENT=1 ;
